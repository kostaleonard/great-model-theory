Index.PACKAGES = {"layers" : [{"name" : "layers.Dense", "shortDescription" : "", "object" : "layers\/Dense$.html", "members_object" : [{"label" : "withRandomWeights", "tail" : "(previousLayer: Layer[T], units: Int)(arg0: ClassTag[T], num: Numeric[T]): Dense[T]", "member" : "layers.Dense.withRandomWeights", "link" : "layers\/Dense$.html#withRandomWeights[T](previousLayer:layers.Layer[T],units:Int)(implicitevidence$2:scala.reflect.ClassTag[T],implicitnum:Numeric[T]):layers.Dense[T]", "kind" : "def"}, {"label" : "withInitialization", "tail" : "(previousLayer: Layer[T], units: Int, weightsInitialization: Option[ModelParameter[T]], biasesInitialization: Option[ModelParameter[T]])(arg0: ClassTag[T], num: Numeric[T]): Dense[T]", "member" : "layers.Dense.withInitialization", "link" : "layers\/Dense$.html#withInitialization[T](previousLayer:layers.Layer[T],units:Int,weightsInitialization:Option[autodifferentiation.ModelParameter[T]],biasesInitialization:Option[autodifferentiation.ModelParameter[T]])(implicitevidence$1:scala.reflect.ClassTag[T],implicitnum:Numeric[T]):layers.Dense[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "layers\/Dense$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "layers\/Dense$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "layers\/Dense$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "layers\/Dense$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "layers\/Dense$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "layers\/Dense$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "layers\/Dense$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "layers\/Dense$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "layers\/Dense$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "layers\/Dense$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "layers\/Dense$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "layers\/Dense$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "layers\/Dense$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "layers\/Dense$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "layers\/Dense$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "layers\/Dense$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "layers\/Dense$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "layers\/Dense$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "layers\/Dense$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "withUpdatedParameters", "tail" : "(parameters: Map[ModelParameter[T], ModelParameter[T]]): Layer[T]", "member" : "layers.Dense.withUpdatedParameters", "link" : "layers\/Dense.html#withUpdatedParameters(parameters:Map[autodifferentiation.ModelParameter[T],autodifferentiation.ModelParameter[T]]):layers.Layer[T]", "kind" : "def"}, {"label" : "getComputationGraph", "tail" : "(): DifferentiableFunction[T]", "member" : "layers.Dense.getComputationGraph", "link" : "layers\/Dense.html#getComputationGraph:autodifferentiation.DifferentiableFunction[T]", "kind" : "def"}, {"member" : "layers.Dense#<init>", "error" : "unsupported entity"}, {"label" : "biases", "tail" : ": ModelParameter[T]", "member" : "layers.Dense.biases", "link" : "layers\/Dense.html#biases:autodifferentiation.ModelParameter[T]", "kind" : "val"}, {"label" : "weights", "tail" : ": ModelParameter[T]", "member" : "layers.Dense.weights", "link" : "layers\/Dense.html#weights:autodifferentiation.ModelParameter[T]", "kind" : "val"}, {"label" : "units", "tail" : ": Int", "member" : "layers.Dense.units", "link" : "layers\/Dense.html#units:Int", "kind" : "val"}, {"label" : "previousLayer", "tail" : ": Layer[T]", "member" : "layers.Dense.previousLayer", "link" : "layers\/Dense.html#previousLayer:layers.Layer[T]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "layers\/Dense.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "layers\/Dense.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "getOutputShape", "tail" : "(): Array[Option[Int]]", "member" : "layers.Layer.getOutputShape", "link" : "layers\/Dense.html#getOutputShape:Array[Option[Int]]", "kind" : "def"}, {"label" : "getInputs", "tail" : "(): Set[Input[T]]", "member" : "layers.Layer.getInputs", "link" : "layers\/Dense.html#getInputs:Set[autodifferentiation.Input[T]]", "kind" : "def"}, {"label" : "apply", "tail" : "(inputs: Map[Input[T], NDArray[T]]): NDArray[T]", "member" : "layers.Layer.apply", "link" : "layers\/Dense.html#apply(inputs:Map[autodifferentiation.Input[T],ndarray.NDArray[T]]):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "layers\/Dense.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "layers\/Dense.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "layers\/Dense.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "layers\/Dense.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "layers\/Dense.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "layers\/Dense.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "layers\/Dense.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "layers\/Dense.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "layers\/Dense.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "layers\/Dense.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "layers\/Dense.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "layers\/Dense.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "layers\/Dense.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "layers\/Dense.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "layers\/Dense.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "layers\/Dense.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "layers\/Dense.html", "kind" : "object"}, {"name" : "layers.InputLayer", "shortDescription" : "An input to a neural network.", "members_case class" : [{"label" : "withUpdatedParameters", "tail" : "(parameters: Map[ModelParameter[T], ModelParameter[T]]): Layer[T]", "member" : "layers.InputLayer.withUpdatedParameters", "link" : "layers\/InputLayer.html#withUpdatedParameters(parameters:Map[autodifferentiation.ModelParameter[T],autodifferentiation.ModelParameter[T]]):layers.Layer[T]", "kind" : "def"}, {"label" : "getComputationGraph", "tail" : "(): DifferentiableFunction[T]", "member" : "layers.InputLayer.getComputationGraph", "link" : "layers\/InputLayer.html#getComputationGraph:autodifferentiation.DifferentiableFunction[T]", "kind" : "def"}, {"member" : "layers.InputLayer#<init>", "error" : "unsupported entity"}, {"label" : "input", "tail" : ": Input[T]", "member" : "layers.InputLayer.input", "link" : "layers\/InputLayer.html#input:autodifferentiation.Input[T]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "layers\/InputLayer.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "layers\/InputLayer.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "getOutputShape", "tail" : "(): Array[Option[Int]]", "member" : "layers.Layer.getOutputShape", "link" : "layers\/InputLayer.html#getOutputShape:Array[Option[Int]]", "kind" : "def"}, {"label" : "getInputs", "tail" : "(): Set[Input[T]]", "member" : "layers.Layer.getInputs", "link" : "layers\/InputLayer.html#getInputs:Set[autodifferentiation.Input[T]]", "kind" : "def"}, {"label" : "apply", "tail" : "(inputs: Map[Input[T], NDArray[T]]): NDArray[T]", "member" : "layers.Layer.apply", "link" : "layers\/InputLayer.html#apply(inputs:Map[autodifferentiation.Input[T],ndarray.NDArray[T]]):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "layers\/InputLayer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "layers\/InputLayer.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "layers\/InputLayer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "layers\/InputLayer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "layers\/InputLayer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "layers\/InputLayer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "layers\/InputLayer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "layers\/InputLayer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "layers\/InputLayer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "layers\/InputLayer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "layers\/InputLayer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "layers\/InputLayer.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "layers\/InputLayer.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "layers\/InputLayer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "layers\/InputLayer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "layers\/InputLayer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "layers\/InputLayer.html", "kind" : "case class"}, {"name" : "layers.Layer", "shortDescription" : "A neural network layer.", "members_class" : [{"label" : "getOutputShape", "tail" : "(): Array[Option[Int]]", "member" : "layers.Layer.getOutputShape", "link" : "layers\/Layer.html#getOutputShape:Array[Option[Int]]", "kind" : "def"}, {"label" : "getInputs", "tail" : "(): Set[Input[T]]", "member" : "layers.Layer.getInputs", "link" : "layers\/Layer.html#getInputs:Set[autodifferentiation.Input[T]]", "kind" : "def"}, {"label" : "apply", "tail" : "(inputs: Map[Input[T], NDArray[T]]): NDArray[T]", "member" : "layers.Layer.apply", "link" : "layers\/Layer.html#apply(inputs:Map[autodifferentiation.Input[T],ndarray.NDArray[T]]):ndarray.NDArray[T]", "kind" : "def"}, {"member" : "layers.Layer#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "layers\/Layer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "layers\/Layer.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "layers\/Layer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "layers\/Layer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "layers\/Layer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "layers\/Layer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "layers\/Layer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "layers\/Layer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "layers\/Layer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "layers\/Layer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "layers\/Layer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "layers\/Layer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "layers\/Layer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "layers\/Layer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "layers\/Layer.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "layers\/Layer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "layers\/Layer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "layers\/Layer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "layers\/Layer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "withUpdatedParameters", "tail" : "(parameters: Map[ModelParameter[T], ModelParameter[T]]): Layer[T]", "member" : "layers.Layer.withUpdatedParameters", "link" : "layers\/Layer.html#withUpdatedParameters(parameters:Map[autodifferentiation.ModelParameter[T],autodifferentiation.ModelParameter[T]]):layers.Layer[T]", "kind" : "abstract def"}, {"label" : "getComputationGraph", "tail" : "(): DifferentiableFunction[T]", "member" : "layers.Layer.getComputationGraph", "link" : "layers\/Layer.html#getComputationGraph:autodifferentiation.DifferentiableFunction[T]", "kind" : "abstract def"}], "class" : "layers\/Layer.html", "kind" : "class"}, {"name" : "layers.MeanSquaredError", "shortDescription" : "Computes the mean squared error of the previous layer given outputs.", "members_case class" : [{"label" : "withUpdatedParameters", "tail" : "(parameters: Map[ModelParameter[T], ModelParameter[T]]): Layer[T]", "member" : "layers.MeanSquaredError.withUpdatedParameters", "link" : "layers\/MeanSquaredError.html#withUpdatedParameters(parameters:Map[autodifferentiation.ModelParameter[T],autodifferentiation.ModelParameter[T]]):layers.Layer[T]", "kind" : "def"}, {"label" : "getComputationGraph", "tail" : "(): DifferentiableFunction[T]", "member" : "layers.MeanSquaredError.getComputationGraph", "link" : "layers\/MeanSquaredError.html#getComputationGraph:autodifferentiation.DifferentiableFunction[T]", "kind" : "def"}, {"label" : "labelsInput", "tail" : ": Input[T]", "member" : "layers.MeanSquaredError.labelsInput", "link" : "layers\/MeanSquaredError.html#labelsInput:autodifferentiation.Input[T]", "kind" : "val"}, {"member" : "layers.MeanSquaredError#<init>", "error" : "unsupported entity"}, {"label" : "previousLayer", "tail" : ": Layer[T]", "member" : "layers.MeanSquaredError.previousLayer", "link" : "layers\/MeanSquaredError.html#previousLayer:layers.Layer[T]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "layers\/MeanSquaredError.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "layers\/MeanSquaredError.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "getOutputShape", "tail" : "(): Array[Option[Int]]", "member" : "layers.Layer.getOutputShape", "link" : "layers\/MeanSquaredError.html#getOutputShape:Array[Option[Int]]", "kind" : "def"}, {"label" : "getInputs", "tail" : "(): Set[Input[T]]", "member" : "layers.Layer.getInputs", "link" : "layers\/MeanSquaredError.html#getInputs:Set[autodifferentiation.Input[T]]", "kind" : "def"}, {"label" : "apply", "tail" : "(inputs: Map[Input[T], NDArray[T]]): NDArray[T]", "member" : "layers.Layer.apply", "link" : "layers\/MeanSquaredError.html#apply(inputs:Map[autodifferentiation.Input[T],ndarray.NDArray[T]]):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "layers\/MeanSquaredError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "layers\/MeanSquaredError.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "layers\/MeanSquaredError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "layers\/MeanSquaredError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "layers\/MeanSquaredError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "layers\/MeanSquaredError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "layers\/MeanSquaredError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "layers\/MeanSquaredError.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "layers\/MeanSquaredError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "layers\/MeanSquaredError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "layers\/MeanSquaredError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "layers\/MeanSquaredError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "layers\/MeanSquaredError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "layers\/MeanSquaredError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "layers\/MeanSquaredError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "layers\/MeanSquaredError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "layers\/MeanSquaredError.html", "kind" : "case class"}, {"name" : "layers.Sigmoid", "shortDescription" : "A sigmoid neural network layer.", "members_case class" : [{"label" : "withUpdatedParameters", "tail" : "(parameters: Map[ModelParameter[T], ModelParameter[T]]): Layer[T]", "member" : "layers.Sigmoid.withUpdatedParameters", "link" : "layers\/Sigmoid.html#withUpdatedParameters(parameters:Map[autodifferentiation.ModelParameter[T],autodifferentiation.ModelParameter[T]]):layers.Layer[T]", "kind" : "def"}, {"label" : "getComputationGraph", "tail" : "(): DifferentiableFunction[T]", "member" : "layers.Sigmoid.getComputationGraph", "link" : "layers\/Sigmoid.html#getComputationGraph:autodifferentiation.DifferentiableFunction[T]", "kind" : "def"}, {"member" : "layers.Sigmoid#<init>", "error" : "unsupported entity"}, {"label" : "previousLayer", "tail" : ": Layer[T]", "member" : "layers.Sigmoid.previousLayer", "link" : "layers\/Sigmoid.html#previousLayer:layers.Layer[T]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "layers\/Sigmoid.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "layers\/Sigmoid.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "getOutputShape", "tail" : "(): Array[Option[Int]]", "member" : "layers.Layer.getOutputShape", "link" : "layers\/Sigmoid.html#getOutputShape:Array[Option[Int]]", "kind" : "def"}, {"label" : "getInputs", "tail" : "(): Set[Input[T]]", "member" : "layers.Layer.getInputs", "link" : "layers\/Sigmoid.html#getInputs:Set[autodifferentiation.Input[T]]", "kind" : "def"}, {"label" : "apply", "tail" : "(inputs: Map[Input[T], NDArray[T]]): NDArray[T]", "member" : "layers.Layer.apply", "link" : "layers\/Sigmoid.html#apply(inputs:Map[autodifferentiation.Input[T],ndarray.NDArray[T]]):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "layers\/Sigmoid.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "layers\/Sigmoid.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "layers\/Sigmoid.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "layers\/Sigmoid.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "layers\/Sigmoid.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "layers\/Sigmoid.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "layers\/Sigmoid.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "layers\/Sigmoid.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "layers\/Sigmoid.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "layers\/Sigmoid.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "layers\/Sigmoid.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "layers\/Sigmoid.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "layers\/Sigmoid.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "layers\/Sigmoid.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "layers\/Sigmoid.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "layers\/Sigmoid.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "layers\/Sigmoid.html", "kind" : "case class"}], "model" : [{"name" : "model.Model", "shortDescription" : "A neural network.", "members_case class" : [{"label" : "fit", "tail" : "(inputs: Map[Input[T], NDArray[T]], labels: NDArray[T], epochs: Int, learningRate: Double)(numeric: Fractional[T]): Model[T]", "member" : "model.Model.fit", "link" : "model\/Model.html#fit(inputs:Map[autodifferentiation.Input[T],ndarray.NDArray[T]],labels:ndarray.NDArray[T],epochs:Int,learningRate:Double)(implicitnumeric:Fractional[T]):model.Model[T]", "kind" : "def"}, {"label" : "withUpdatedParameters", "tail" : "(parameters: Map[ModelParameter[T], ModelParameter[T]]): Model[T]", "member" : "model.Model.withUpdatedParameters", "link" : "model\/Model.html#withUpdatedParameters(parameters:Map[autodifferentiation.ModelParameter[T],autodifferentiation.ModelParameter[T]]):model.Model[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(inputs: Map[Input[T], NDArray[T]]): NDArray[T]", "member" : "model.Model.apply", "link" : "model\/Model.html#apply(inputs:Map[autodifferentiation.Input[T],ndarray.NDArray[T]]):ndarray.NDArray[T]", "kind" : "def"}, {"member" : "model.Model#<init>", "error" : "unsupported entity"}, {"label" : "outputLayer", "tail" : ": Layer[T]", "member" : "model.Model.outputLayer", "link" : "model\/Model.html#outputLayer:layers.Layer[T]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "model\/Model.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "model\/Model.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "model\/Model.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "model\/Model.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "model\/Model.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "model\/Model.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "model\/Model.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "model\/Model.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "model\/Model.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "model\/Model.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "model\/Model.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "model\/Model.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "model\/Model.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "model\/Model.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "model\/Model.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "model\/Model.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "model\/Model.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "model\/Model.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "model\/Model.html", "kind" : "case class"}], "exceptions" : [{"name" : "exceptions.ShapeException", "shortDescription" : "Thrown when the user performs an operation on an incorrectly shaped NDArray.", "members_class" : [{"member" : "exceptions.ShapeException#<init>", "error" : "unsupported entity"}, {"member" : "exceptions.ShapeException#<init>", "error" : "unsupported entity"}, {"member" : "exceptions.ShapeException#<init>", "error" : "unsupported entity"}, {"member" : "exceptions.ShapeException#<init>", "error" : "unsupported entity"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "exceptions\/ShapeException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "exceptions\/ShapeException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "exceptions\/ShapeException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "exceptions\/ShapeException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "exceptions\/ShapeException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "exceptions\/ShapeException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "exceptions\/ShapeException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "exceptions\/ShapeException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "exceptions\/ShapeException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "exceptions\/ShapeException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "exceptions\/ShapeException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "exceptions\/ShapeException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "exceptions\/ShapeException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "exceptions\/ShapeException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "exceptions\/ShapeException.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "exceptions\/ShapeException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "exceptions\/ShapeException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "exceptions\/ShapeException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "exceptions\/ShapeException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "exceptions\/ShapeException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "exceptions\/ShapeException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "exceptions\/ShapeException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "exceptions\/ShapeException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "exceptions\/ShapeException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "exceptions\/ShapeException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "exceptions\/ShapeException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "exceptions\/ShapeException.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "exceptions\/ShapeException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "exceptions\/ShapeException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "exceptions\/ShapeException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "exceptions\/ShapeException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "exceptions\/ShapeException.html", "kind" : "class"}], "ndarray" : [{"name" : "ndarray.NDArray", "shortDescription" : "An N-dimensional array.", "object" : "ndarray\/NDArray$.html", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "ndarray.NDArray.toString", "link" : "ndarray\/NDArray.html#toString():String", "kind" : "def"}, {"label" : "reduce", "tail" : "(f: (NDArray[T]) => B, axis: Int, keepDims: Boolean)(arg0: ClassTag[B]): NDArray[B]", "member" : "ndarray.NDArray.reduce", "link" : "ndarray\/NDArray.html#reduce[B](f:ndarray.NDArray[T]=>B,axis:Int,keepDims:Boolean)(implicitevidence$10:scala.reflect.ClassTag[B]):ndarray.NDArray[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (T) => B)(arg0: ClassTag[B]): NDArray[B]", "member" : "ndarray.NDArray.map", "link" : "ndarray\/NDArray.html#map[B](f:T=>B)(implicitevidence$9:scala.reflect.ClassTag[B]):ndarray.NDArray[B]", "kind" : "def"}, {"label" : "dot", "tail" : "(other: NDArray[T])(num: Numeric[T]): NDArray[T]", "member" : "ndarray.NDArray.dot", "link" : "ndarray\/NDArray.html#dot(other:ndarray.NDArray[T])(implicitnum:Numeric[T]):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "matmul", "tail" : "(other: NDArray[T])(num: Numeric[T]): NDArray[T]", "member" : "ndarray.NDArray.matmul", "link" : "ndarray\/NDArray.html#matmul(other:ndarray.NDArray[T])(implicitnum:Numeric[T]):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "slice", "tail" : "(indices: Array[Option[Array[Int]]]): NDArray[T]", "member" : "ndarray.NDArray.slice", "link" : "ndarray\/NDArray.html#slice(indices:Array[Option[Array[Int]]]):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "squeeze", "tail" : "(): NDArray[T]", "member" : "ndarray.NDArray.squeeze", "link" : "ndarray\/NDArray.html#squeeze():ndarray.NDArray[T]", "kind" : "def"}, {"label" : "transpose", "tail" : "(): NDArray[T]", "member" : "ndarray.NDArray.transpose", "link" : "ndarray\/NDArray.html#transpose:ndarray.NDArray[T]", "kind" : "def"}, {"label" : "exp", "tail" : "(num: Fractional[T]): NDArray[T]", "member" : "ndarray.NDArray.exp", "link" : "ndarray\/NDArray.html#exp(implicitnum:Fractional[T]):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "negate", "tail" : "(num: Numeric[T]): NDArray[T]", "member" : "ndarray.NDArray.negate", "link" : "ndarray\/NDArray.html#negate(implicitnum:Numeric[T]):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "reciprocal", "tail" : "(num: Fractional[T]): NDArray[T]", "member" : "ndarray.NDArray.reciprocal", "link" : "ndarray\/NDArray.html#reciprocal(implicitnum:Fractional[T]):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "square", "tail" : "(num: Numeric[T]): NDArray[T]", "member" : "ndarray.NDArray.square", "link" : "ndarray\/NDArray.html#square(implicitnum:Numeric[T]):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "mean", "tail" : "(num: Fractional[T]): T", "member" : "ndarray.NDArray.mean", "link" : "ndarray\/NDArray.html#mean(implicitnum:Fractional[T]):T", "kind" : "def"}, {"label" : "sumAxis", "tail" : "(axis: Int, keepDims: Boolean)(num: Numeric[T]): NDArray[T]", "member" : "ndarray.NDArray.sumAxis", "link" : "ndarray\/NDArray.html#sumAxis(axis:Int,keepDims:Boolean)(implicitnum:Numeric[T]):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[T]): T", "member" : "ndarray.NDArray.sum", "link" : "ndarray\/NDArray.html#sum(implicitnum:Numeric[T]):T", "kind" : "def"}, {"label" : "\/", "tail" : "(other: NDArray[T])(num: Fractional[T]): NDArray[T]", "member" : "ndarray.NDArray.\/", "link" : "ndarray\/NDArray.html#\/(other:ndarray.NDArray[T])(implicitnum:Fractional[T]):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "*", "tail" : "(other: NDArray[T])(num: Numeric[T]): NDArray[T]", "member" : "ndarray.NDArray.*", "link" : "ndarray\/NDArray.html#*(other:ndarray.NDArray[T])(implicitnum:Numeric[T]):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "-", "tail" : "(other: NDArray[T])(num: Numeric[T]): NDArray[T]", "member" : "ndarray.NDArray.-", "link" : "ndarray\/NDArray.html#-(other:ndarray.NDArray[T])(implicitnum:Numeric[T]):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "+", "tail" : "(other: NDArray[T])(num: Numeric[T]): NDArray[T]", "member" : "ndarray.NDArray.+", "link" : "ndarray\/NDArray.html#+(other:ndarray.NDArray[T])(implicitnum:Numeric[T]):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "broadcastWith", "tail" : "(other: NDArray[T]): (NDArray[T], NDArray[T])", "member" : "ndarray.NDArray.broadcastWith", "link" : "ndarray\/NDArray.html#broadcastWith(other:ndarray.NDArray[T]):(ndarray.NDArray[T],ndarray.NDArray[T])", "kind" : "def"}, {"label" : "broadcastTo", "tail" : "(targetShape: Array[Int]): NDArray[T]", "member" : "ndarray.NDArray.broadcastTo", "link" : "ndarray\/NDArray.html#broadcastTo(targetShape:Array[Int]):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "~=", "tail" : "(other: NDArray[T], epsilon: Double): NDArray[Boolean]", "member" : "ndarray.NDArray.~=", "link" : "ndarray\/NDArray.html#~=(other:ndarray.NDArray[T],epsilon:Double):ndarray.NDArray[Boolean]", "kind" : "def"}, {"label" : "arrayNotApproximatelyEquals", "tail" : "(other: NDArray[T], epsilon: Double): Boolean", "member" : "ndarray.NDArray.arrayNotApproximatelyEquals", "link" : "ndarray\/NDArray.html#arrayNotApproximatelyEquals(other:ndarray.NDArray[T],epsilon:Double):Boolean", "kind" : "def"}, {"label" : "arrayApproximatelyEquals", "tail" : "(other: NDArray[T], epsilon: Double): Boolean", "member" : "ndarray.NDArray.arrayApproximatelyEquals", "link" : "ndarray\/NDArray.html#arrayApproximatelyEquals(other:ndarray.NDArray[T],epsilon:Double):Boolean", "kind" : "def"}, {"label" : "==", "tail" : "(other: NDArray[T]): NDArray[Boolean]", "member" : "ndarray.NDArray.==", "link" : "ndarray\/NDArray.html#==(other:ndarray.NDArray[T]):ndarray.NDArray[Boolean]", "kind" : "def"}, {"label" : "arrayNotEquals", "tail" : "(other: NDArray[T]): Boolean", "member" : "ndarray.NDArray.arrayNotEquals", "link" : "ndarray\/NDArray.html#arrayNotEquals(other:ndarray.NDArray[T]):Boolean", "kind" : "def"}, {"label" : "arrayEquals", "tail" : "(other: NDArray[T]): Boolean", "member" : "ndarray.NDArray.arrayEquals", "link" : "ndarray\/NDArray.html#arrayEquals(other:ndarray.NDArray[T]):Boolean", "kind" : "def"}, {"label" : "updated", "tail" : "(indices: Array[Int], element: T): NDArray[T]", "member" : "ndarray.NDArray.updated", "link" : "ndarray\/NDArray.html#updated(indices:Array[Int],element:T):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "indices", "tail" : "(): Array[Array[Int]]", "member" : "ndarray.NDArray.indices", "link" : "ndarray\/NDArray.html#indices:Array[Array[Int]]", "kind" : "def"}, {"label" : "reshape", "tail" : "(targetShape: Array[Int]): NDArray[T]", "member" : "ndarray.NDArray.reshape", "link" : "ndarray\/NDArray.html#reshape(targetShape:Array[Int]):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(indices: Array[Int]): T", "member" : "ndarray.NDArray.apply", "link" : "ndarray\/NDArray.html#apply(indices:Array[Int]):T", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "ndarray.NDArray.nonEmpty", "link" : "ndarray\/NDArray.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "ndarray.NDArray.isEmpty", "link" : "ndarray\/NDArray.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "flatten", "tail" : "(): Array[T]", "member" : "ndarray.NDArray.flatten", "link" : "ndarray\/NDArray.html#flatten():Array[T]", "kind" : "def"}, {"label" : "shape", "tail" : ": Array[Int]", "member" : "ndarray.NDArray.shape", "link" : "ndarray\/NDArray.html#shape:Array[Int]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ndarray\/NDArray.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ndarray\/NDArray.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ndarray\/NDArray.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ndarray\/NDArray.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ndarray\/NDArray.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ndarray\/NDArray.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ndarray\/NDArray.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ndarray\/NDArray.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ndarray\/NDArray.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ndarray\/NDArray.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ndarray\/NDArray.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ndarray\/NDArray.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ndarray\/NDArray.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ndarray\/NDArray.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ndarray\/NDArray.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ndarray\/NDArray.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ndarray\/NDArray.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ndarray\/NDArray.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "random", "tail" : "(shape: Array[Int])(arg0: ClassTag[T]): NDArray[T]", "member" : "ndarray.NDArray.random", "link" : "ndarray\/NDArray$.html#random[T](shape:Array[Int])(implicitevidence$7:scala.reflect.ClassTag[T]):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "arange", "tail" : "(shape: Array[Int])(arg0: ClassTag[T]): NDArray[T]", "member" : "ndarray.NDArray.arange", "link" : "ndarray\/NDArray$.html#arange[T](shape:Array[Int])(implicitevidence$6:scala.reflect.ClassTag[T]):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(seq: Seq[T])(arg0: ClassTag[T]): NDArray[T]", "member" : "ndarray.NDArray.apply", "link" : "ndarray\/NDArray$.html#apply[T](seq:Seq[T])(implicitevidence$5:scala.reflect.ClassTag[T]):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "ones", "tail" : "(shape: Array[Int])(arg0: ClassTag[T]): NDArray[T]", "member" : "ndarray.NDArray.ones", "link" : "ndarray\/NDArray$.html#ones[T](shape:Array[Int])(implicitevidence$4:scala.reflect.ClassTag[T]):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "zeros", "tail" : "(shape: Array[Int])(arg0: ClassTag[T]): NDArray[T]", "member" : "ndarray.NDArray.zeros", "link" : "ndarray\/NDArray$.html#zeros[T](shape:Array[Int])(implicitevidence$3:scala.reflect.ClassTag[T]):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "ofValue", "tail" : "(shape: Array[Int], value: T)(arg0: ClassTag[T]): NDArray[T]", "member" : "ndarray.NDArray.ofValue", "link" : "ndarray\/NDArray$.html#ofValue[T](shape:Array[Int],value:T)(implicitevidence$2:scala.reflect.ClassTag[T]):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "empty", "tail" : "(arg0: ClassTag[T]): NDArray[T]", "member" : "ndarray.NDArray.empty", "link" : "ndarray\/NDArray$.html#empty[T](implicitevidence$1:scala.reflect.ClassTag[T]):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ndarray\/NDArray$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ndarray\/NDArray$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ndarray\/NDArray$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ndarray\/NDArray$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ndarray\/NDArray$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ndarray\/NDArray$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ndarray\/NDArray$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ndarray\/NDArray$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ndarray\/NDArray$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ndarray\/NDArray$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ndarray\/NDArray$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ndarray\/NDArray$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ndarray\/NDArray$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ndarray\/NDArray$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ndarray\/NDArray$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ndarray\/NDArray$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ndarray\/NDArray$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ndarray\/NDArray$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ndarray\/NDArray$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ndarray\/NDArray.html", "kind" : "object"}], "autodifferentiation" : [{"name" : "autodifferentiation.Add", "shortDescription" : "Adds the results of two functions.", "members_case class" : [{"label" : "gradient", "tail" : "(withRespectToVariable: Variable[T]): DifferentiableFunction[T]", "member" : "autodifferentiation.Add.gradient", "link" : "autodifferentiation\/Add.html#gradient(withRespectToVariable:autodifferentiation.Variable[T]):autodifferentiation.DifferentiableFunction[T]", "kind" : "def"}, {"label" : "backpropagate", "tail" : "(execution: DifferentiableFunctionExecution[T], outputGradient: NDArray[T], withRespectToArg: Int): NDArray[T]", "member" : "autodifferentiation.Add.backpropagate", "link" : "autodifferentiation\/Add.html#backpropagate(execution:autodifferentiation.DifferentiableFunctionExecution[T],outputGradient:ndarray.NDArray[T],withRespectToArg:Int):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "computeAll", "tail" : "(inputs: Map[Input[T], NDArray[T]]): DifferentiableFunctionExecution[T]", "member" : "autodifferentiation.Add.computeAll", "link" : "autodifferentiation\/Add.html#computeAll(inputs:Map[autodifferentiation.Input[T],ndarray.NDArray[T]]):autodifferentiation.DifferentiableFunctionExecution[T]", "kind" : "def"}, {"member" : "autodifferentiation.Add#<init>", "error" : "unsupported entity"}, {"label" : "classTag", "tail" : ": ClassTag[T]", "member" : "autodifferentiation.Add.classTag", "link" : "autodifferentiation\/Add.html#classTag:scala.reflect.ClassTag[T]", "kind" : "implicit val"}, {"label" : "b", "tail" : ": DifferentiableFunction[T]", "member" : "autodifferentiation.Add.b", "link" : "autodifferentiation\/Add.html#b:autodifferentiation.DifferentiableFunction[T]", "kind" : "val"}, {"label" : "a", "tail" : ": DifferentiableFunction[T]", "member" : "autodifferentiation.Add.a", "link" : "autodifferentiation\/Add.html#a:autodifferentiation.DifferentiableFunction[T]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "autodifferentiation\/Add.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "autodifferentiation\/Add.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "getInputs", "tail" : "(): Set[Input[T]]", "member" : "autodifferentiation.BinaryDifferentiableFunctionWithBroadcast.getInputs", "link" : "autodifferentiation\/Add.html#getInputs:Set[autodifferentiation.Input[T]]", "kind" : "def"}, {"label" : "unbroadcast", "tail" : "(targetShape: Array[Int], outputGradient: NDArray[T])(num: Numeric[T]): NDArray[T]", "member" : "autodifferentiation.BinaryDifferentiableFunctionWithBroadcast.unbroadcast", "link" : "autodifferentiation\/Add.html#unbroadcast(targetShape:Array[Int],outputGradient:ndarray.NDArray[T])(implicitnum:Numeric[T]):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "getParents", "tail" : "(): List[DifferentiableFunction[T]]", "member" : "autodifferentiation.BinaryDifferentiableFunctionWithBroadcast.getParents", "link" : "autodifferentiation\/Add.html#getParents:List[autodifferentiation.DifferentiableFunction[T]]", "kind" : "def"}, {"label" : "getOutputShape", "tail" : "(): Array[Option[Int]]", "member" : "autodifferentiation.BinaryDifferentiableFunctionWithBroadcast.getOutputShape", "link" : "autodifferentiation\/Add.html#getOutputShape:Array[Option[Int]]", "kind" : "def"}, {"label" : "backpropagateAll", "tail" : "(execution: DifferentiableFunctionExecution[T])(num: Numeric[T]): Map[DifferentiableFunction[T], NDArray[T]]", "member" : "autodifferentiation.DifferentiableFunction.backpropagateAll", "link" : "autodifferentiation\/Add.html#backpropagateAll(execution:autodifferentiation.DifferentiableFunctionExecution[T])(implicitnum:Numeric[T]):Map[autodifferentiation.DifferentiableFunction[T],ndarray.NDArray[T]]", "kind" : "def"}, {"label" : "compute", "tail" : "(inputs: Map[Input[T], NDArray[T]]): NDArray[T]", "member" : "autodifferentiation.DifferentiableFunction.compute", "link" : "autodifferentiation\/Add.html#compute(inputs:Map[autodifferentiation.Input[T],ndarray.NDArray[T]]):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "autodifferentiation\/Add.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "autodifferentiation\/Add.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "autodifferentiation\/Add.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "autodifferentiation\/Add.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "autodifferentiation\/Add.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "autodifferentiation\/Add.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "autodifferentiation\/Add.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "autodifferentiation\/Add.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "autodifferentiation\/Add.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "autodifferentiation\/Add.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "autodifferentiation\/Add.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "autodifferentiation\/Add.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "autodifferentiation\/Add.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "autodifferentiation\/Add.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "autodifferentiation\/Add.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "autodifferentiation\/Add.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "autodifferentiation\/Add.html", "kind" : "case class"}, {"name" : "autodifferentiation.BinaryDifferentiableFunctionWithBroadcast", "trait" : "autodifferentiation\/BinaryDifferentiableFunctionWithBroadcast.html", "kind" : "trait", "members_trait" : [{"label" : "getInputs", "tail" : "(): Set[Input[T]]", "member" : "autodifferentiation.BinaryDifferentiableFunctionWithBroadcast.getInputs", "link" : "autodifferentiation\/BinaryDifferentiableFunctionWithBroadcast.html#getInputs:Set[autodifferentiation.Input[T]]", "kind" : "def"}, {"label" : "unbroadcast", "tail" : "(targetShape: Array[Int], outputGradient: NDArray[T])(num: Numeric[T]): NDArray[T]", "member" : "autodifferentiation.BinaryDifferentiableFunctionWithBroadcast.unbroadcast", "link" : "autodifferentiation\/BinaryDifferentiableFunctionWithBroadcast.html#unbroadcast(targetShape:Array[Int],outputGradient:ndarray.NDArray[T])(implicitnum:Numeric[T]):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "getParents", "tail" : "(): List[DifferentiableFunction[T]]", "member" : "autodifferentiation.BinaryDifferentiableFunctionWithBroadcast.getParents", "link" : "autodifferentiation\/BinaryDifferentiableFunctionWithBroadcast.html#getParents:List[autodifferentiation.DifferentiableFunction[T]]", "kind" : "def"}, {"label" : "getOutputShape", "tail" : "(): Array[Option[Int]]", "member" : "autodifferentiation.BinaryDifferentiableFunctionWithBroadcast.getOutputShape", "link" : "autodifferentiation\/BinaryDifferentiableFunctionWithBroadcast.html#getOutputShape:Array[Option[Int]]", "kind" : "def"}, {"label" : "backpropagateAll", "tail" : "(execution: DifferentiableFunctionExecution[T])(num: Numeric[T]): Map[DifferentiableFunction[T], NDArray[T]]", "member" : "autodifferentiation.DifferentiableFunction.backpropagateAll", "link" : "autodifferentiation\/BinaryDifferentiableFunctionWithBroadcast.html#backpropagateAll(execution:autodifferentiation.DifferentiableFunctionExecution[T])(implicitnum:Numeric[T]):Map[autodifferentiation.DifferentiableFunction[T],ndarray.NDArray[T]]", "kind" : "def"}, {"label" : "compute", "tail" : "(inputs: Map[Input[T], NDArray[T]]): NDArray[T]", "member" : "autodifferentiation.DifferentiableFunction.compute", "link" : "autodifferentiation\/BinaryDifferentiableFunctionWithBroadcast.html#compute(inputs:Map[autodifferentiation.Input[T],ndarray.NDArray[T]]):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "autodifferentiation\/BinaryDifferentiableFunctionWithBroadcast.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "autodifferentiation\/BinaryDifferentiableFunctionWithBroadcast.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "autodifferentiation\/BinaryDifferentiableFunctionWithBroadcast.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "autodifferentiation\/BinaryDifferentiableFunctionWithBroadcast.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "autodifferentiation\/BinaryDifferentiableFunctionWithBroadcast.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "autodifferentiation\/BinaryDifferentiableFunctionWithBroadcast.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "autodifferentiation\/BinaryDifferentiableFunctionWithBroadcast.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "autodifferentiation\/BinaryDifferentiableFunctionWithBroadcast.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "autodifferentiation\/BinaryDifferentiableFunctionWithBroadcast.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "autodifferentiation\/BinaryDifferentiableFunctionWithBroadcast.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "autodifferentiation\/BinaryDifferentiableFunctionWithBroadcast.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "autodifferentiation\/BinaryDifferentiableFunctionWithBroadcast.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "autodifferentiation\/BinaryDifferentiableFunctionWithBroadcast.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "autodifferentiation\/BinaryDifferentiableFunctionWithBroadcast.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "autodifferentiation\/BinaryDifferentiableFunctionWithBroadcast.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "autodifferentiation\/BinaryDifferentiableFunctionWithBroadcast.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "autodifferentiation\/BinaryDifferentiableFunctionWithBroadcast.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "autodifferentiation\/BinaryDifferentiableFunctionWithBroadcast.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "autodifferentiation\/BinaryDifferentiableFunctionWithBroadcast.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "b", "tail" : ": DifferentiableFunction[T]", "member" : "autodifferentiation.BinaryDifferentiableFunctionWithBroadcast.b", "link" : "autodifferentiation\/BinaryDifferentiableFunctionWithBroadcast.html#b:autodifferentiation.DifferentiableFunction[T]", "kind" : "abstract val"}, {"label" : "a", "tail" : ": DifferentiableFunction[T]", "member" : "autodifferentiation.BinaryDifferentiableFunctionWithBroadcast.a", "link" : "autodifferentiation\/BinaryDifferentiableFunctionWithBroadcast.html#a:autodifferentiation.DifferentiableFunction[T]", "kind" : "abstract val"}, {"label" : "gradient", "tail" : "(withRespectToVariable: Variable[T]): DifferentiableFunction[T]", "member" : "autodifferentiation.DifferentiableFunction.gradient", "link" : "autodifferentiation\/BinaryDifferentiableFunctionWithBroadcast.html#gradient(withRespectToVariable:autodifferentiation.Variable[T]):autodifferentiation.DifferentiableFunction[T]", "kind" : "abstract def"}, {"label" : "backpropagate", "tail" : "(execution: DifferentiableFunctionExecution[T], outputGradient: NDArray[T], withRespectToArg: Int): NDArray[T]", "member" : "autodifferentiation.DifferentiableFunction.backpropagate", "link" : "autodifferentiation\/BinaryDifferentiableFunctionWithBroadcast.html#backpropagate(execution:autodifferentiation.DifferentiableFunctionExecution[T],outputGradient:ndarray.NDArray[T],withRespectToArg:Int):ndarray.NDArray[T]", "kind" : "abstract def"}, {"label" : "computeAll", "tail" : "(inputs: Map[Input[T], NDArray[T]]): DifferentiableFunctionExecution[T]", "member" : "autodifferentiation.DifferentiableFunction.computeAll", "link" : "autodifferentiation\/BinaryDifferentiableFunctionWithBroadcast.html#computeAll(inputs:Map[autodifferentiation.Input[T],ndarray.NDArray[T]]):autodifferentiation.DifferentiableFunctionExecution[T]", "kind" : "abstract def"}, {"label" : "classTag", "tail" : ": ClassTag[T]", "member" : "autodifferentiation.DifferentiableFunction.classTag", "link" : "autodifferentiation\/BinaryDifferentiableFunctionWithBroadcast.html#classTag:scala.reflect.ClassTag[T]", "kind" : "implicit abstract val"}], "shortDescription" : "A differentiable function with two arguments that broadcasts its operations."}, {"name" : "autodifferentiation.Constant", "shortDescription" : "A constant (has 0 gradient).", "members_case class" : [{"label" : "getParents", "tail" : "(): List[DifferentiableFunction[T]]", "member" : "autodifferentiation.Constant.getParents", "link" : "autodifferentiation\/Constant.html#getParents:List[autodifferentiation.DifferentiableFunction[T]]", "kind" : "def"}, {"label" : "getOutputShape", "tail" : "(): Array[Option[Int]]", "member" : "autodifferentiation.Constant.getOutputShape", "link" : "autodifferentiation\/Constant.html#getOutputShape:Array[Option[Int]]", "kind" : "def"}, {"label" : "getInputs", "tail" : "(): Set[Input[T]]", "member" : "autodifferentiation.Constant.getInputs", "link" : "autodifferentiation\/Constant.html#getInputs:Set[autodifferentiation.Input[T]]", "kind" : "def"}, {"label" : "gradient", "tail" : "(withRespectToVariable: Variable[T]): DifferentiableFunction[T]", "member" : "autodifferentiation.Constant.gradient", "link" : "autodifferentiation\/Constant.html#gradient(withRespectToVariable:autodifferentiation.Variable[T]):autodifferentiation.DifferentiableFunction[T]", "kind" : "def"}, {"label" : "backpropagate", "tail" : "(execution: DifferentiableFunctionExecution[T], outputGradient: NDArray[T], withRespectToArg: Int): NDArray[T]", "member" : "autodifferentiation.Constant.backpropagate", "link" : "autodifferentiation\/Constant.html#backpropagate(execution:autodifferentiation.DifferentiableFunctionExecution[T],outputGradient:ndarray.NDArray[T],withRespectToArg:Int):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "computeAll", "tail" : "(inputs: Map[Input[T], NDArray[T]]): DifferentiableFunctionExecution[T]", "member" : "autodifferentiation.Constant.computeAll", "link" : "autodifferentiation\/Constant.html#computeAll(inputs:Map[autodifferentiation.Input[T],ndarray.NDArray[T]]):autodifferentiation.DifferentiableFunctionExecution[T]", "kind" : "def"}, {"member" : "autodifferentiation.Constant#<init>", "error" : "unsupported entity"}, {"label" : "classTag", "tail" : ": ClassTag[T]", "member" : "autodifferentiation.Constant.classTag", "link" : "autodifferentiation\/Constant.html#classTag:scala.reflect.ClassTag[T]", "kind" : "implicit val"}, {"label" : "value", "tail" : ": NDArray[T]", "member" : "autodifferentiation.Constant.value", "link" : "autodifferentiation\/Constant.html#value:ndarray.NDArray[T]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "autodifferentiation\/Constant.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "autodifferentiation\/Constant.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "backpropagateAll", "tail" : "(execution: DifferentiableFunctionExecution[T])(num: Numeric[T]): Map[DifferentiableFunction[T], NDArray[T]]", "member" : "autodifferentiation.DifferentiableFunction.backpropagateAll", "link" : "autodifferentiation\/Constant.html#backpropagateAll(execution:autodifferentiation.DifferentiableFunctionExecution[T])(implicitnum:Numeric[T]):Map[autodifferentiation.DifferentiableFunction[T],ndarray.NDArray[T]]", "kind" : "def"}, {"label" : "compute", "tail" : "(inputs: Map[Input[T], NDArray[T]]): NDArray[T]", "member" : "autodifferentiation.DifferentiableFunction.compute", "link" : "autodifferentiation\/Constant.html#compute(inputs:Map[autodifferentiation.Input[T],ndarray.NDArray[T]]):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "autodifferentiation\/Constant.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "autodifferentiation\/Constant.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "autodifferentiation\/Constant.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "autodifferentiation\/Constant.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "autodifferentiation\/Constant.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "autodifferentiation\/Constant.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "autodifferentiation\/Constant.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "autodifferentiation\/Constant.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "autodifferentiation\/Constant.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "autodifferentiation\/Constant.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "autodifferentiation\/Constant.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "autodifferentiation\/Constant.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "autodifferentiation\/Constant.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "autodifferentiation\/Constant.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "autodifferentiation\/Constant.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "autodifferentiation\/Constant.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "autodifferentiation\/Constant.html", "kind" : "case class"}, {"name" : "autodifferentiation.DifferentiableFunction", "trait" : "autodifferentiation\/DifferentiableFunction.html", "kind" : "trait", "members_trait" : [{"label" : "backpropagateAll", "tail" : "(execution: DifferentiableFunctionExecution[T])(num: Numeric[T]): Map[DifferentiableFunction[T], NDArray[T]]", "member" : "autodifferentiation.DifferentiableFunction.backpropagateAll", "link" : "autodifferentiation\/DifferentiableFunction.html#backpropagateAll(execution:autodifferentiation.DifferentiableFunctionExecution[T])(implicitnum:Numeric[T]):Map[autodifferentiation.DifferentiableFunction[T],ndarray.NDArray[T]]", "kind" : "def"}, {"label" : "compute", "tail" : "(inputs: Map[Input[T], NDArray[T]]): NDArray[T]", "member" : "autodifferentiation.DifferentiableFunction.compute", "link" : "autodifferentiation\/DifferentiableFunction.html#compute(inputs:Map[autodifferentiation.Input[T],ndarray.NDArray[T]]):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "autodifferentiation\/DifferentiableFunction.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "autodifferentiation\/DifferentiableFunction.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "autodifferentiation\/DifferentiableFunction.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "autodifferentiation\/DifferentiableFunction.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "autodifferentiation\/DifferentiableFunction.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "autodifferentiation\/DifferentiableFunction.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "autodifferentiation\/DifferentiableFunction.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "autodifferentiation\/DifferentiableFunction.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "autodifferentiation\/DifferentiableFunction.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "autodifferentiation\/DifferentiableFunction.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "autodifferentiation\/DifferentiableFunction.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "autodifferentiation\/DifferentiableFunction.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "autodifferentiation\/DifferentiableFunction.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "autodifferentiation\/DifferentiableFunction.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "autodifferentiation\/DifferentiableFunction.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "autodifferentiation\/DifferentiableFunction.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "autodifferentiation\/DifferentiableFunction.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "autodifferentiation\/DifferentiableFunction.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "autodifferentiation\/DifferentiableFunction.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "getParents", "tail" : "(): List[DifferentiableFunction[T]]", "member" : "autodifferentiation.DifferentiableFunction.getParents", "link" : "autodifferentiation\/DifferentiableFunction.html#getParents:List[autodifferentiation.DifferentiableFunction[T]]", "kind" : "abstract def"}, {"label" : "getOutputShape", "tail" : "(): Array[Option[Int]]", "member" : "autodifferentiation.DifferentiableFunction.getOutputShape", "link" : "autodifferentiation\/DifferentiableFunction.html#getOutputShape:Array[Option[Int]]", "kind" : "abstract def"}, {"label" : "getInputs", "tail" : "(): Set[Input[T]]", "member" : "autodifferentiation.DifferentiableFunction.getInputs", "link" : "autodifferentiation\/DifferentiableFunction.html#getInputs:Set[autodifferentiation.Input[T]]", "kind" : "abstract def"}, {"label" : "gradient", "tail" : "(withRespectToVariable: Variable[T]): DifferentiableFunction[T]", "member" : "autodifferentiation.DifferentiableFunction.gradient", "link" : "autodifferentiation\/DifferentiableFunction.html#gradient(withRespectToVariable:autodifferentiation.Variable[T]):autodifferentiation.DifferentiableFunction[T]", "kind" : "abstract def"}, {"label" : "backpropagate", "tail" : "(execution: DifferentiableFunctionExecution[T], outputGradient: NDArray[T], withRespectToArg: Int): NDArray[T]", "member" : "autodifferentiation.DifferentiableFunction.backpropagate", "link" : "autodifferentiation\/DifferentiableFunction.html#backpropagate(execution:autodifferentiation.DifferentiableFunctionExecution[T],outputGradient:ndarray.NDArray[T],withRespectToArg:Int):ndarray.NDArray[T]", "kind" : "abstract def"}, {"label" : "computeAll", "tail" : "(inputs: Map[Input[T], NDArray[T]]): DifferentiableFunctionExecution[T]", "member" : "autodifferentiation.DifferentiableFunction.computeAll", "link" : "autodifferentiation\/DifferentiableFunction.html#computeAll(inputs:Map[autodifferentiation.Input[T],ndarray.NDArray[T]]):autodifferentiation.DifferentiableFunctionExecution[T]", "kind" : "abstract def"}, {"label" : "classTag", "tail" : ": ClassTag[T]", "member" : "autodifferentiation.DifferentiableFunction.classTag", "link" : "autodifferentiation\/DifferentiableFunction.html#classTag:scala.reflect.ClassTag[T]", "kind" : "implicit abstract val"}], "shortDescription" : "A function that is differentiable with respect to its variables."}, {"name" : "autodifferentiation.DifferentiableFunctionExecution", "shortDescription" : "Contains the results of function execution on particular inputs.", "members_case class" : [{"member" : "autodifferentiation.DifferentiableFunctionExecution#<init>", "error" : "unsupported entity"}, {"label" : "outputs", "tail" : ": Map[DifferentiableFunction[T], NDArray[T]]", "member" : "autodifferentiation.DifferentiableFunctionExecution.outputs", "link" : "autodifferentiation\/DifferentiableFunctionExecution.html#outputs:Map[autodifferentiation.DifferentiableFunction[T],ndarray.NDArray[T]]", "kind" : "val"}, {"label" : "inputs", "tail" : ": Map[Input[T], NDArray[T]]", "member" : "autodifferentiation.DifferentiableFunctionExecution.inputs", "link" : "autodifferentiation\/DifferentiableFunctionExecution.html#inputs:Map[autodifferentiation.Input[T],ndarray.NDArray[T]]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "autodifferentiation\/DifferentiableFunctionExecution.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "autodifferentiation\/DifferentiableFunctionExecution.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "autodifferentiation\/DifferentiableFunctionExecution.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "autodifferentiation\/DifferentiableFunctionExecution.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "autodifferentiation\/DifferentiableFunctionExecution.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "autodifferentiation\/DifferentiableFunctionExecution.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "autodifferentiation\/DifferentiableFunctionExecution.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "autodifferentiation\/DifferentiableFunctionExecution.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "autodifferentiation\/DifferentiableFunctionExecution.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "autodifferentiation\/DifferentiableFunctionExecution.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "autodifferentiation\/DifferentiableFunctionExecution.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "autodifferentiation\/DifferentiableFunctionExecution.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "autodifferentiation\/DifferentiableFunctionExecution.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "autodifferentiation\/DifferentiableFunctionExecution.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "autodifferentiation\/DifferentiableFunctionExecution.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "autodifferentiation\/DifferentiableFunctionExecution.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "autodifferentiation\/DifferentiableFunctionExecution.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "autodifferentiation\/DifferentiableFunctionExecution.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "autodifferentiation\/DifferentiableFunctionExecution.html", "kind" : "case class"}, {"name" : "autodifferentiation.DotProduct", "shortDescription" : "Computes the dot product of the results of two functions.", "members_case class" : [{"label" : "getParents", "tail" : "(): List[DifferentiableFunction[T]]", "member" : "autodifferentiation.DotProduct.getParents", "link" : "autodifferentiation\/DotProduct.html#getParents:List[autodifferentiation.DifferentiableFunction[T]]", "kind" : "def"}, {"label" : "getOutputShape", "tail" : "(): Array[Option[Int]]", "member" : "autodifferentiation.DotProduct.getOutputShape", "link" : "autodifferentiation\/DotProduct.html#getOutputShape:Array[Option[Int]]", "kind" : "def"}, {"label" : "getInputs", "tail" : "(): Set[Input[T]]", "member" : "autodifferentiation.DotProduct.getInputs", "link" : "autodifferentiation\/DotProduct.html#getInputs:Set[autodifferentiation.Input[T]]", "kind" : "def"}, {"label" : "gradient", "tail" : "(withRespectToVariable: Variable[T]): DifferentiableFunction[T]", "member" : "autodifferentiation.DotProduct.gradient", "link" : "autodifferentiation\/DotProduct.html#gradient(withRespectToVariable:autodifferentiation.Variable[T]):autodifferentiation.DifferentiableFunction[T]", "kind" : "def"}, {"label" : "backpropagate", "tail" : "(execution: DifferentiableFunctionExecution[T], outputGradient: NDArray[T], withRespectToArg: Int): NDArray[T]", "member" : "autodifferentiation.DotProduct.backpropagate", "link" : "autodifferentiation\/DotProduct.html#backpropagate(execution:autodifferentiation.DifferentiableFunctionExecution[T],outputGradient:ndarray.NDArray[T],withRespectToArg:Int):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "computeAll", "tail" : "(inputs: Map[Input[T], NDArray[T]]): DifferentiableFunctionExecution[T]", "member" : "autodifferentiation.DotProduct.computeAll", "link" : "autodifferentiation\/DotProduct.html#computeAll(inputs:Map[autodifferentiation.Input[T],ndarray.NDArray[T]]):autodifferentiation.DifferentiableFunctionExecution[T]", "kind" : "def"}, {"member" : "autodifferentiation.DotProduct#<init>", "error" : "unsupported entity"}, {"label" : "classTag", "tail" : ": ClassTag[T]", "member" : "autodifferentiation.DotProduct.classTag", "link" : "autodifferentiation\/DotProduct.html#classTag:scala.reflect.ClassTag[T]", "kind" : "implicit val"}, {"label" : "b", "tail" : ": DifferentiableFunction[T]", "member" : "autodifferentiation.DotProduct.b", "link" : "autodifferentiation\/DotProduct.html#b:autodifferentiation.DifferentiableFunction[T]", "kind" : "val"}, {"label" : "a", "tail" : ": DifferentiableFunction[T]", "member" : "autodifferentiation.DotProduct.a", "link" : "autodifferentiation\/DotProduct.html#a:autodifferentiation.DifferentiableFunction[T]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "autodifferentiation\/DotProduct.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "autodifferentiation\/DotProduct.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "backpropagateAll", "tail" : "(execution: DifferentiableFunctionExecution[T])(num: Numeric[T]): Map[DifferentiableFunction[T], NDArray[T]]", "member" : "autodifferentiation.DifferentiableFunction.backpropagateAll", "link" : "autodifferentiation\/DotProduct.html#backpropagateAll(execution:autodifferentiation.DifferentiableFunctionExecution[T])(implicitnum:Numeric[T]):Map[autodifferentiation.DifferentiableFunction[T],ndarray.NDArray[T]]", "kind" : "def"}, {"label" : "compute", "tail" : "(inputs: Map[Input[T], NDArray[T]]): NDArray[T]", "member" : "autodifferentiation.DifferentiableFunction.compute", "link" : "autodifferentiation\/DotProduct.html#compute(inputs:Map[autodifferentiation.Input[T],ndarray.NDArray[T]]):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "autodifferentiation\/DotProduct.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "autodifferentiation\/DotProduct.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "autodifferentiation\/DotProduct.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "autodifferentiation\/DotProduct.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "autodifferentiation\/DotProduct.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "autodifferentiation\/DotProduct.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "autodifferentiation\/DotProduct.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "autodifferentiation\/DotProduct.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "autodifferentiation\/DotProduct.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "autodifferentiation\/DotProduct.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "autodifferentiation\/DotProduct.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "autodifferentiation\/DotProduct.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "autodifferentiation\/DotProduct.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "autodifferentiation\/DotProduct.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "autodifferentiation\/DotProduct.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "autodifferentiation\/DotProduct.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "autodifferentiation\/DotProduct.html", "kind" : "case class"}, {"name" : "autodifferentiation.Exp", "shortDescription" : "Returns the exponentiation of the results of a function (f(x) = pow(e, x)).", "members_case class" : [{"label" : "gradient", "tail" : "(withRespectToVariable: Variable[T]): DifferentiableFunction[T]", "member" : "autodifferentiation.Exp.gradient", "link" : "autodifferentiation\/Exp.html#gradient(withRespectToVariable:autodifferentiation.Variable[T]):autodifferentiation.DifferentiableFunction[T]", "kind" : "def"}, {"label" : "backpropagate", "tail" : "(execution: DifferentiableFunctionExecution[T], outputGradient: NDArray[T], withRespectToArg: Int): NDArray[T]", "member" : "autodifferentiation.Exp.backpropagate", "link" : "autodifferentiation\/Exp.html#backpropagate(execution:autodifferentiation.DifferentiableFunctionExecution[T],outputGradient:ndarray.NDArray[T],withRespectToArg:Int):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "computeAll", "tail" : "(inputs: Map[Input[T], NDArray[T]]): DifferentiableFunctionExecution[T]", "member" : "autodifferentiation.Exp.computeAll", "link" : "autodifferentiation\/Exp.html#computeAll(inputs:Map[autodifferentiation.Input[T],ndarray.NDArray[T]]):autodifferentiation.DifferentiableFunctionExecution[T]", "kind" : "def"}, {"member" : "autodifferentiation.Exp#<init>", "error" : "unsupported entity"}, {"label" : "classTag", "tail" : ": ClassTag[T]", "member" : "autodifferentiation.Exp.classTag", "link" : "autodifferentiation\/Exp.html#classTag:scala.reflect.ClassTag[T]", "kind" : "implicit val"}, {"label" : "a", "tail" : ": DifferentiableFunction[T]", "member" : "autodifferentiation.Exp.a", "link" : "autodifferentiation\/Exp.html#a:autodifferentiation.DifferentiableFunction[T]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "autodifferentiation\/Exp.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "autodifferentiation\/Exp.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "getInputs", "tail" : "(): Set[Input[T]]", "member" : "autodifferentiation.UnaryElementWiseDifferentiableFunction.getInputs", "link" : "autodifferentiation\/Exp.html#getInputs:Set[autodifferentiation.Input[T]]", "kind" : "def"}, {"label" : "getParents", "tail" : "(): List[DifferentiableFunction[T]]", "member" : "autodifferentiation.UnaryElementWiseDifferentiableFunction.getParents", "link" : "autodifferentiation\/Exp.html#getParents:List[autodifferentiation.DifferentiableFunction[T]]", "kind" : "def"}, {"label" : "getOutputShape", "tail" : "(): Array[Option[Int]]", "member" : "autodifferentiation.UnaryElementWiseDifferentiableFunction.getOutputShape", "link" : "autodifferentiation\/Exp.html#getOutputShape:Array[Option[Int]]", "kind" : "def"}, {"label" : "backpropagateAll", "tail" : "(execution: DifferentiableFunctionExecution[T])(num: Numeric[T]): Map[DifferentiableFunction[T], NDArray[T]]", "member" : "autodifferentiation.DifferentiableFunction.backpropagateAll", "link" : "autodifferentiation\/Exp.html#backpropagateAll(execution:autodifferentiation.DifferentiableFunctionExecution[T])(implicitnum:Numeric[T]):Map[autodifferentiation.DifferentiableFunction[T],ndarray.NDArray[T]]", "kind" : "def"}, {"label" : "compute", "tail" : "(inputs: Map[Input[T], NDArray[T]]): NDArray[T]", "member" : "autodifferentiation.DifferentiableFunction.compute", "link" : "autodifferentiation\/Exp.html#compute(inputs:Map[autodifferentiation.Input[T],ndarray.NDArray[T]]):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "autodifferentiation\/Exp.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "autodifferentiation\/Exp.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "autodifferentiation\/Exp.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "autodifferentiation\/Exp.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "autodifferentiation\/Exp.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "autodifferentiation\/Exp.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "autodifferentiation\/Exp.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "autodifferentiation\/Exp.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "autodifferentiation\/Exp.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "autodifferentiation\/Exp.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "autodifferentiation\/Exp.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "autodifferentiation\/Exp.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "autodifferentiation\/Exp.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "autodifferentiation\/Exp.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "autodifferentiation\/Exp.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "autodifferentiation\/Exp.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "autodifferentiation\/Exp.html", "kind" : "case class"}, {"name" : "autodifferentiation.Input", "shortDescription" : "An input variable that users supply.", "members_case class" : [{"label" : "getParents", "tail" : "(): List[DifferentiableFunction[T]]", "member" : "autodifferentiation.Input.getParents", "link" : "autodifferentiation\/Input.html#getParents:List[autodifferentiation.DifferentiableFunction[T]]", "kind" : "def"}, {"label" : "getOutputShape", "tail" : "(): Array[Option[Int]]", "member" : "autodifferentiation.Input.getOutputShape", "link" : "autodifferentiation\/Input.html#getOutputShape:Array[Option[Int]]", "kind" : "def"}, {"label" : "getInputs", "tail" : "(): Set[Input[T]]", "member" : "autodifferentiation.Input.getInputs", "link" : "autodifferentiation\/Input.html#getInputs:Set[autodifferentiation.Input[T]]", "kind" : "def"}, {"label" : "computeAll", "tail" : "(inputs: Map[Input[T], NDArray[T]]): DifferentiableFunctionExecution[T]", "member" : "autodifferentiation.Input.computeAll", "link" : "autodifferentiation\/Input.html#computeAll(inputs:Map[autodifferentiation.Input[T],ndarray.NDArray[T]]):autodifferentiation.DifferentiableFunctionExecution[T]", "kind" : "def"}, {"member" : "autodifferentiation.Input#<init>", "error" : "unsupported entity"}, {"label" : "classTag", "tail" : ": ClassTag[T]", "member" : "autodifferentiation.Input.classTag", "link" : "autodifferentiation\/Input.html#classTag:scala.reflect.ClassTag[T]", "kind" : "implicit val"}, {"label" : "shapeWithPlaceholders", "tail" : ": Array[Option[Int]]", "member" : "autodifferentiation.Input.shapeWithPlaceholders", "link" : "autodifferentiation\/Input.html#shapeWithPlaceholders:Array[Option[Int]]", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "autodifferentiation.Input.name", "link" : "autodifferentiation\/Input.html#name:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "autodifferentiation\/Input.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "autodifferentiation\/Input.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "gradient", "tail" : "(withRespectToVariable: Variable[T]): DifferentiableFunction[T]", "member" : "autodifferentiation.Variable.gradient", "link" : "autodifferentiation\/Input.html#gradient(withRespectToVariable:autodifferentiation.Variable[T]):autodifferentiation.DifferentiableFunction[T]", "kind" : "def"}, {"label" : "backpropagate", "tail" : "(execution: DifferentiableFunctionExecution[T], outputGradient: NDArray[T], withRespectToArg: Int): NDArray[T]", "member" : "autodifferentiation.Variable.backpropagate", "link" : "autodifferentiation\/Input.html#backpropagate(execution:autodifferentiation.DifferentiableFunctionExecution[T],outputGradient:ndarray.NDArray[T],withRespectToArg:Int):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "backpropagateAll", "tail" : "(execution: DifferentiableFunctionExecution[T])(num: Numeric[T]): Map[DifferentiableFunction[T], NDArray[T]]", "member" : "autodifferentiation.DifferentiableFunction.backpropagateAll", "link" : "autodifferentiation\/Input.html#backpropagateAll(execution:autodifferentiation.DifferentiableFunctionExecution[T])(implicitnum:Numeric[T]):Map[autodifferentiation.DifferentiableFunction[T],ndarray.NDArray[T]]", "kind" : "def"}, {"label" : "compute", "tail" : "(inputs: Map[Input[T], NDArray[T]]): NDArray[T]", "member" : "autodifferentiation.DifferentiableFunction.compute", "link" : "autodifferentiation\/Input.html#compute(inputs:Map[autodifferentiation.Input[T],ndarray.NDArray[T]]):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "autodifferentiation\/Input.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "autodifferentiation\/Input.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "autodifferentiation\/Input.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "autodifferentiation\/Input.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "autodifferentiation\/Input.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "autodifferentiation\/Input.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "autodifferentiation\/Input.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "autodifferentiation\/Input.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "autodifferentiation\/Input.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "autodifferentiation\/Input.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "autodifferentiation\/Input.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "autodifferentiation\/Input.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "autodifferentiation\/Input.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "autodifferentiation\/Input.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "autodifferentiation\/Input.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "autodifferentiation\/Input.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "autodifferentiation\/Input.html", "kind" : "case class"}, {"name" : "autodifferentiation.Mean", "shortDescription" : "Computes the mean of the results of a function.", "members_case class" : [{"label" : "getParents", "tail" : "(): List[DifferentiableFunction[T]]", "member" : "autodifferentiation.Mean.getParents", "link" : "autodifferentiation\/Mean.html#getParents:List[autodifferentiation.DifferentiableFunction[T]]", "kind" : "def"}, {"label" : "getOutputShape", "tail" : "(): Array[Option[Int]]", "member" : "autodifferentiation.Mean.getOutputShape", "link" : "autodifferentiation\/Mean.html#getOutputShape:Array[Option[Int]]", "kind" : "def"}, {"label" : "getInputs", "tail" : "(): Set[Input[T]]", "member" : "autodifferentiation.Mean.getInputs", "link" : "autodifferentiation\/Mean.html#getInputs:Set[autodifferentiation.Input[T]]", "kind" : "def"}, {"label" : "gradient", "tail" : "(withRespectToVariable: Variable[T]): DifferentiableFunction[T]", "member" : "autodifferentiation.Mean.gradient", "link" : "autodifferentiation\/Mean.html#gradient(withRespectToVariable:autodifferentiation.Variable[T]):autodifferentiation.DifferentiableFunction[T]", "kind" : "def"}, {"label" : "backpropagate", "tail" : "(execution: DifferentiableFunctionExecution[T], outputGradient: NDArray[T], withRespectToArg: Int): NDArray[T]", "member" : "autodifferentiation.Mean.backpropagate", "link" : "autodifferentiation\/Mean.html#backpropagate(execution:autodifferentiation.DifferentiableFunctionExecution[T],outputGradient:ndarray.NDArray[T],withRespectToArg:Int):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "computeAll", "tail" : "(inputs: Map[Input[T], NDArray[T]]): DifferentiableFunctionExecution[T]", "member" : "autodifferentiation.Mean.computeAll", "link" : "autodifferentiation\/Mean.html#computeAll(inputs:Map[autodifferentiation.Input[T],ndarray.NDArray[T]]):autodifferentiation.DifferentiableFunctionExecution[T]", "kind" : "def"}, {"member" : "autodifferentiation.Mean#<init>", "error" : "unsupported entity"}, {"label" : "classTag", "tail" : ": ClassTag[T]", "member" : "autodifferentiation.Mean.classTag", "link" : "autodifferentiation\/Mean.html#classTag:scala.reflect.ClassTag[T]", "kind" : "implicit val"}, {"label" : "a", "tail" : ": DifferentiableFunction[T]", "member" : "autodifferentiation.Mean.a", "link" : "autodifferentiation\/Mean.html#a:autodifferentiation.DifferentiableFunction[T]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "autodifferentiation\/Mean.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "autodifferentiation\/Mean.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "backpropagateAll", "tail" : "(execution: DifferentiableFunctionExecution[T])(num: Numeric[T]): Map[DifferentiableFunction[T], NDArray[T]]", "member" : "autodifferentiation.DifferentiableFunction.backpropagateAll", "link" : "autodifferentiation\/Mean.html#backpropagateAll(execution:autodifferentiation.DifferentiableFunctionExecution[T])(implicitnum:Numeric[T]):Map[autodifferentiation.DifferentiableFunction[T],ndarray.NDArray[T]]", "kind" : "def"}, {"label" : "compute", "tail" : "(inputs: Map[Input[T], NDArray[T]]): NDArray[T]", "member" : "autodifferentiation.DifferentiableFunction.compute", "link" : "autodifferentiation\/Mean.html#compute(inputs:Map[autodifferentiation.Input[T],ndarray.NDArray[T]]):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "autodifferentiation\/Mean.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "autodifferentiation\/Mean.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "autodifferentiation\/Mean.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "autodifferentiation\/Mean.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "autodifferentiation\/Mean.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "autodifferentiation\/Mean.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "autodifferentiation\/Mean.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "autodifferentiation\/Mean.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "autodifferentiation\/Mean.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "autodifferentiation\/Mean.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "autodifferentiation\/Mean.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "autodifferentiation\/Mean.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "autodifferentiation\/Mean.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "autodifferentiation\/Mean.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "autodifferentiation\/Mean.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "autodifferentiation\/Mean.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "autodifferentiation\/Mean.html", "kind" : "case class"}, {"name" : "autodifferentiation.ModelParameter", "shortDescription" : "A model parameter.", "members_case class" : [{"label" : "getParents", "tail" : "(): List[DifferentiableFunction[T]]", "member" : "autodifferentiation.ModelParameter.getParents", "link" : "autodifferentiation\/ModelParameter.html#getParents:List[autodifferentiation.DifferentiableFunction[T]]", "kind" : "def"}, {"label" : "getOutputShape", "tail" : "(): Array[Option[Int]]", "member" : "autodifferentiation.ModelParameter.getOutputShape", "link" : "autodifferentiation\/ModelParameter.html#getOutputShape:Array[Option[Int]]", "kind" : "def"}, {"label" : "getInputs", "tail" : "(): Set[Input[T]]", "member" : "autodifferentiation.ModelParameter.getInputs", "link" : "autodifferentiation\/ModelParameter.html#getInputs:Set[autodifferentiation.Input[T]]", "kind" : "def"}, {"label" : "computeAll", "tail" : "(inputs: Map[Input[T], NDArray[T]]): DifferentiableFunctionExecution[T]", "member" : "autodifferentiation.ModelParameter.computeAll", "link" : "autodifferentiation\/ModelParameter.html#computeAll(inputs:Map[autodifferentiation.Input[T],ndarray.NDArray[T]]):autodifferentiation.DifferentiableFunctionExecution[T]", "kind" : "def"}, {"member" : "autodifferentiation.ModelParameter#<init>", "error" : "unsupported entity"}, {"label" : "classTag", "tail" : ": ClassTag[T]", "member" : "autodifferentiation.ModelParameter.classTag", "link" : "autodifferentiation\/ModelParameter.html#classTag:scala.reflect.ClassTag[T]", "kind" : "implicit val"}, {"label" : "value", "tail" : ": NDArray[T]", "member" : "autodifferentiation.ModelParameter.value", "link" : "autodifferentiation\/ModelParameter.html#value:ndarray.NDArray[T]", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "autodifferentiation.ModelParameter.name", "link" : "autodifferentiation\/ModelParameter.html#name:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "autodifferentiation\/ModelParameter.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "autodifferentiation\/ModelParameter.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "gradient", "tail" : "(withRespectToVariable: Variable[T]): DifferentiableFunction[T]", "member" : "autodifferentiation.Variable.gradient", "link" : "autodifferentiation\/ModelParameter.html#gradient(withRespectToVariable:autodifferentiation.Variable[T]):autodifferentiation.DifferentiableFunction[T]", "kind" : "def"}, {"label" : "backpropagate", "tail" : "(execution: DifferentiableFunctionExecution[T], outputGradient: NDArray[T], withRespectToArg: Int): NDArray[T]", "member" : "autodifferentiation.Variable.backpropagate", "link" : "autodifferentiation\/ModelParameter.html#backpropagate(execution:autodifferentiation.DifferentiableFunctionExecution[T],outputGradient:ndarray.NDArray[T],withRespectToArg:Int):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "backpropagateAll", "tail" : "(execution: DifferentiableFunctionExecution[T])(num: Numeric[T]): Map[DifferentiableFunction[T], NDArray[T]]", "member" : "autodifferentiation.DifferentiableFunction.backpropagateAll", "link" : "autodifferentiation\/ModelParameter.html#backpropagateAll(execution:autodifferentiation.DifferentiableFunctionExecution[T])(implicitnum:Numeric[T]):Map[autodifferentiation.DifferentiableFunction[T],ndarray.NDArray[T]]", "kind" : "def"}, {"label" : "compute", "tail" : "(inputs: Map[Input[T], NDArray[T]]): NDArray[T]", "member" : "autodifferentiation.DifferentiableFunction.compute", "link" : "autodifferentiation\/ModelParameter.html#compute(inputs:Map[autodifferentiation.Input[T],ndarray.NDArray[T]]):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "autodifferentiation\/ModelParameter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "autodifferentiation\/ModelParameter.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "autodifferentiation\/ModelParameter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "autodifferentiation\/ModelParameter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "autodifferentiation\/ModelParameter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "autodifferentiation\/ModelParameter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "autodifferentiation\/ModelParameter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "autodifferentiation\/ModelParameter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "autodifferentiation\/ModelParameter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "autodifferentiation\/ModelParameter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "autodifferentiation\/ModelParameter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "autodifferentiation\/ModelParameter.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "autodifferentiation\/ModelParameter.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "autodifferentiation\/ModelParameter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "autodifferentiation\/ModelParameter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "autodifferentiation\/ModelParameter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "autodifferentiation\/ModelParameter.html", "kind" : "case class"}, {"name" : "autodifferentiation.Multiply", "shortDescription" : "Element-wise multiplies the results of two functions.", "members_case class" : [{"label" : "gradient", "tail" : "(withRespectToVariable: Variable[T]): DifferentiableFunction[T]", "member" : "autodifferentiation.Multiply.gradient", "link" : "autodifferentiation\/Multiply.html#gradient(withRespectToVariable:autodifferentiation.Variable[T]):autodifferentiation.DifferentiableFunction[T]", "kind" : "def"}, {"label" : "backpropagate", "tail" : "(execution: DifferentiableFunctionExecution[T], outputGradient: NDArray[T], withRespectToArg: Int): NDArray[T]", "member" : "autodifferentiation.Multiply.backpropagate", "link" : "autodifferentiation\/Multiply.html#backpropagate(execution:autodifferentiation.DifferentiableFunctionExecution[T],outputGradient:ndarray.NDArray[T],withRespectToArg:Int):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "computeAll", "tail" : "(inputs: Map[Input[T], NDArray[T]]): DifferentiableFunctionExecution[T]", "member" : "autodifferentiation.Multiply.computeAll", "link" : "autodifferentiation\/Multiply.html#computeAll(inputs:Map[autodifferentiation.Input[T],ndarray.NDArray[T]]):autodifferentiation.DifferentiableFunctionExecution[T]", "kind" : "def"}, {"member" : "autodifferentiation.Multiply#<init>", "error" : "unsupported entity"}, {"label" : "classTag", "tail" : ": ClassTag[T]", "member" : "autodifferentiation.Multiply.classTag", "link" : "autodifferentiation\/Multiply.html#classTag:scala.reflect.ClassTag[T]", "kind" : "implicit val"}, {"label" : "b", "tail" : ": DifferentiableFunction[T]", "member" : "autodifferentiation.Multiply.b", "link" : "autodifferentiation\/Multiply.html#b:autodifferentiation.DifferentiableFunction[T]", "kind" : "val"}, {"label" : "a", "tail" : ": DifferentiableFunction[T]", "member" : "autodifferentiation.Multiply.a", "link" : "autodifferentiation\/Multiply.html#a:autodifferentiation.DifferentiableFunction[T]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "autodifferentiation\/Multiply.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "autodifferentiation\/Multiply.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "getInputs", "tail" : "(): Set[Input[T]]", "member" : "autodifferentiation.BinaryDifferentiableFunctionWithBroadcast.getInputs", "link" : "autodifferentiation\/Multiply.html#getInputs:Set[autodifferentiation.Input[T]]", "kind" : "def"}, {"label" : "unbroadcast", "tail" : "(targetShape: Array[Int], outputGradient: NDArray[T])(num: Numeric[T]): NDArray[T]", "member" : "autodifferentiation.BinaryDifferentiableFunctionWithBroadcast.unbroadcast", "link" : "autodifferentiation\/Multiply.html#unbroadcast(targetShape:Array[Int],outputGradient:ndarray.NDArray[T])(implicitnum:Numeric[T]):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "getParents", "tail" : "(): List[DifferentiableFunction[T]]", "member" : "autodifferentiation.BinaryDifferentiableFunctionWithBroadcast.getParents", "link" : "autodifferentiation\/Multiply.html#getParents:List[autodifferentiation.DifferentiableFunction[T]]", "kind" : "def"}, {"label" : "getOutputShape", "tail" : "(): Array[Option[Int]]", "member" : "autodifferentiation.BinaryDifferentiableFunctionWithBroadcast.getOutputShape", "link" : "autodifferentiation\/Multiply.html#getOutputShape:Array[Option[Int]]", "kind" : "def"}, {"label" : "backpropagateAll", "tail" : "(execution: DifferentiableFunctionExecution[T])(num: Numeric[T]): Map[DifferentiableFunction[T], NDArray[T]]", "member" : "autodifferentiation.DifferentiableFunction.backpropagateAll", "link" : "autodifferentiation\/Multiply.html#backpropagateAll(execution:autodifferentiation.DifferentiableFunctionExecution[T])(implicitnum:Numeric[T]):Map[autodifferentiation.DifferentiableFunction[T],ndarray.NDArray[T]]", "kind" : "def"}, {"label" : "compute", "tail" : "(inputs: Map[Input[T], NDArray[T]]): NDArray[T]", "member" : "autodifferentiation.DifferentiableFunction.compute", "link" : "autodifferentiation\/Multiply.html#compute(inputs:Map[autodifferentiation.Input[T],ndarray.NDArray[T]]):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "autodifferentiation\/Multiply.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "autodifferentiation\/Multiply.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "autodifferentiation\/Multiply.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "autodifferentiation\/Multiply.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "autodifferentiation\/Multiply.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "autodifferentiation\/Multiply.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "autodifferentiation\/Multiply.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "autodifferentiation\/Multiply.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "autodifferentiation\/Multiply.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "autodifferentiation\/Multiply.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "autodifferentiation\/Multiply.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "autodifferentiation\/Multiply.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "autodifferentiation\/Multiply.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "autodifferentiation\/Multiply.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "autodifferentiation\/Multiply.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "autodifferentiation\/Multiply.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "autodifferentiation\/Multiply.html", "kind" : "case class"}, {"name" : "autodifferentiation.Negate", "shortDescription" : "Negates the results of a function.", "members_case class" : [{"label" : "gradient", "tail" : "(withRespectToVariable: Variable[T]): DifferentiableFunction[T]", "member" : "autodifferentiation.Negate.gradient", "link" : "autodifferentiation\/Negate.html#gradient(withRespectToVariable:autodifferentiation.Variable[T]):autodifferentiation.DifferentiableFunction[T]", "kind" : "def"}, {"label" : "backpropagate", "tail" : "(execution: DifferentiableFunctionExecution[T], outputGradient: NDArray[T], withRespectToArg: Int): NDArray[T]", "member" : "autodifferentiation.Negate.backpropagate", "link" : "autodifferentiation\/Negate.html#backpropagate(execution:autodifferentiation.DifferentiableFunctionExecution[T],outputGradient:ndarray.NDArray[T],withRespectToArg:Int):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "computeAll", "tail" : "(inputs: Map[Input[T], NDArray[T]]): DifferentiableFunctionExecution[T]", "member" : "autodifferentiation.Negate.computeAll", "link" : "autodifferentiation\/Negate.html#computeAll(inputs:Map[autodifferentiation.Input[T],ndarray.NDArray[T]]):autodifferentiation.DifferentiableFunctionExecution[T]", "kind" : "def"}, {"member" : "autodifferentiation.Negate#<init>", "error" : "unsupported entity"}, {"label" : "classTag", "tail" : ": ClassTag[T]", "member" : "autodifferentiation.Negate.classTag", "link" : "autodifferentiation\/Negate.html#classTag:scala.reflect.ClassTag[T]", "kind" : "implicit val"}, {"label" : "a", "tail" : ": DifferentiableFunction[T]", "member" : "autodifferentiation.Negate.a", "link" : "autodifferentiation\/Negate.html#a:autodifferentiation.DifferentiableFunction[T]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "autodifferentiation\/Negate.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "autodifferentiation\/Negate.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "getInputs", "tail" : "(): Set[Input[T]]", "member" : "autodifferentiation.UnaryElementWiseDifferentiableFunction.getInputs", "link" : "autodifferentiation\/Negate.html#getInputs:Set[autodifferentiation.Input[T]]", "kind" : "def"}, {"label" : "getParents", "tail" : "(): List[DifferentiableFunction[T]]", "member" : "autodifferentiation.UnaryElementWiseDifferentiableFunction.getParents", "link" : "autodifferentiation\/Negate.html#getParents:List[autodifferentiation.DifferentiableFunction[T]]", "kind" : "def"}, {"label" : "getOutputShape", "tail" : "(): Array[Option[Int]]", "member" : "autodifferentiation.UnaryElementWiseDifferentiableFunction.getOutputShape", "link" : "autodifferentiation\/Negate.html#getOutputShape:Array[Option[Int]]", "kind" : "def"}, {"label" : "backpropagateAll", "tail" : "(execution: DifferentiableFunctionExecution[T])(num: Numeric[T]): Map[DifferentiableFunction[T], NDArray[T]]", "member" : "autodifferentiation.DifferentiableFunction.backpropagateAll", "link" : "autodifferentiation\/Negate.html#backpropagateAll(execution:autodifferentiation.DifferentiableFunctionExecution[T])(implicitnum:Numeric[T]):Map[autodifferentiation.DifferentiableFunction[T],ndarray.NDArray[T]]", "kind" : "def"}, {"label" : "compute", "tail" : "(inputs: Map[Input[T], NDArray[T]]): NDArray[T]", "member" : "autodifferentiation.DifferentiableFunction.compute", "link" : "autodifferentiation\/Negate.html#compute(inputs:Map[autodifferentiation.Input[T],ndarray.NDArray[T]]):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "autodifferentiation\/Negate.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "autodifferentiation\/Negate.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "autodifferentiation\/Negate.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "autodifferentiation\/Negate.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "autodifferentiation\/Negate.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "autodifferentiation\/Negate.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "autodifferentiation\/Negate.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "autodifferentiation\/Negate.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "autodifferentiation\/Negate.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "autodifferentiation\/Negate.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "autodifferentiation\/Negate.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "autodifferentiation\/Negate.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "autodifferentiation\/Negate.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "autodifferentiation\/Negate.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "autodifferentiation\/Negate.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "autodifferentiation\/Negate.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "autodifferentiation\/Negate.html", "kind" : "case class"}, {"name" : "autodifferentiation.Reciprocal", "shortDescription" : "Returns the reciprocal of the results of a function.", "members_case class" : [{"label" : "gradient", "tail" : "(withRespectToVariable: Variable[T]): DifferentiableFunction[T]", "member" : "autodifferentiation.Reciprocal.gradient", "link" : "autodifferentiation\/Reciprocal.html#gradient(withRespectToVariable:autodifferentiation.Variable[T]):autodifferentiation.DifferentiableFunction[T]", "kind" : "def"}, {"label" : "backpropagate", "tail" : "(execution: DifferentiableFunctionExecution[T], outputGradient: NDArray[T], withRespectToArg: Int): NDArray[T]", "member" : "autodifferentiation.Reciprocal.backpropagate", "link" : "autodifferentiation\/Reciprocal.html#backpropagate(execution:autodifferentiation.DifferentiableFunctionExecution[T],outputGradient:ndarray.NDArray[T],withRespectToArg:Int):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "computeAll", "tail" : "(inputs: Map[Input[T], NDArray[T]]): DifferentiableFunctionExecution[T]", "member" : "autodifferentiation.Reciprocal.computeAll", "link" : "autodifferentiation\/Reciprocal.html#computeAll(inputs:Map[autodifferentiation.Input[T],ndarray.NDArray[T]]):autodifferentiation.DifferentiableFunctionExecution[T]", "kind" : "def"}, {"member" : "autodifferentiation.Reciprocal#<init>", "error" : "unsupported entity"}, {"label" : "classTag", "tail" : ": ClassTag[T]", "member" : "autodifferentiation.Reciprocal.classTag", "link" : "autodifferentiation\/Reciprocal.html#classTag:scala.reflect.ClassTag[T]", "kind" : "implicit val"}, {"label" : "a", "tail" : ": DifferentiableFunction[T]", "member" : "autodifferentiation.Reciprocal.a", "link" : "autodifferentiation\/Reciprocal.html#a:autodifferentiation.DifferentiableFunction[T]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "autodifferentiation\/Reciprocal.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "autodifferentiation\/Reciprocal.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "getInputs", "tail" : "(): Set[Input[T]]", "member" : "autodifferentiation.UnaryElementWiseDifferentiableFunction.getInputs", "link" : "autodifferentiation\/Reciprocal.html#getInputs:Set[autodifferentiation.Input[T]]", "kind" : "def"}, {"label" : "getParents", "tail" : "(): List[DifferentiableFunction[T]]", "member" : "autodifferentiation.UnaryElementWiseDifferentiableFunction.getParents", "link" : "autodifferentiation\/Reciprocal.html#getParents:List[autodifferentiation.DifferentiableFunction[T]]", "kind" : "def"}, {"label" : "getOutputShape", "tail" : "(): Array[Option[Int]]", "member" : "autodifferentiation.UnaryElementWiseDifferentiableFunction.getOutputShape", "link" : "autodifferentiation\/Reciprocal.html#getOutputShape:Array[Option[Int]]", "kind" : "def"}, {"label" : "backpropagateAll", "tail" : "(execution: DifferentiableFunctionExecution[T])(num: Numeric[T]): Map[DifferentiableFunction[T], NDArray[T]]", "member" : "autodifferentiation.DifferentiableFunction.backpropagateAll", "link" : "autodifferentiation\/Reciprocal.html#backpropagateAll(execution:autodifferentiation.DifferentiableFunctionExecution[T])(implicitnum:Numeric[T]):Map[autodifferentiation.DifferentiableFunction[T],ndarray.NDArray[T]]", "kind" : "def"}, {"label" : "compute", "tail" : "(inputs: Map[Input[T], NDArray[T]]): NDArray[T]", "member" : "autodifferentiation.DifferentiableFunction.compute", "link" : "autodifferentiation\/Reciprocal.html#compute(inputs:Map[autodifferentiation.Input[T],ndarray.NDArray[T]]):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "autodifferentiation\/Reciprocal.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "autodifferentiation\/Reciprocal.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "autodifferentiation\/Reciprocal.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "autodifferentiation\/Reciprocal.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "autodifferentiation\/Reciprocal.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "autodifferentiation\/Reciprocal.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "autodifferentiation\/Reciprocal.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "autodifferentiation\/Reciprocal.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "autodifferentiation\/Reciprocal.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "autodifferentiation\/Reciprocal.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "autodifferentiation\/Reciprocal.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "autodifferentiation\/Reciprocal.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "autodifferentiation\/Reciprocal.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "autodifferentiation\/Reciprocal.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "autodifferentiation\/Reciprocal.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "autodifferentiation\/Reciprocal.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "autodifferentiation\/Reciprocal.html", "kind" : "case class"}, {"name" : "autodifferentiation.Square", "shortDescription" : "Squares the results of a function.", "members_case class" : [{"label" : "gradient", "tail" : "(withRespectToVariable: Variable[T]): DifferentiableFunction[T]", "member" : "autodifferentiation.Square.gradient", "link" : "autodifferentiation\/Square.html#gradient(withRespectToVariable:autodifferentiation.Variable[T]):autodifferentiation.DifferentiableFunction[T]", "kind" : "def"}, {"label" : "backpropagate", "tail" : "(execution: DifferentiableFunctionExecution[T], outputGradient: NDArray[T], withRespectToArg: Int): NDArray[T]", "member" : "autodifferentiation.Square.backpropagate", "link" : "autodifferentiation\/Square.html#backpropagate(execution:autodifferentiation.DifferentiableFunctionExecution[T],outputGradient:ndarray.NDArray[T],withRespectToArg:Int):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "computeAll", "tail" : "(inputs: Map[Input[T], NDArray[T]]): DifferentiableFunctionExecution[T]", "member" : "autodifferentiation.Square.computeAll", "link" : "autodifferentiation\/Square.html#computeAll(inputs:Map[autodifferentiation.Input[T],ndarray.NDArray[T]]):autodifferentiation.DifferentiableFunctionExecution[T]", "kind" : "def"}, {"member" : "autodifferentiation.Square#<init>", "error" : "unsupported entity"}, {"label" : "classTag", "tail" : ": ClassTag[T]", "member" : "autodifferentiation.Square.classTag", "link" : "autodifferentiation\/Square.html#classTag:scala.reflect.ClassTag[T]", "kind" : "implicit val"}, {"label" : "a", "tail" : ": DifferentiableFunction[T]", "member" : "autodifferentiation.Square.a", "link" : "autodifferentiation\/Square.html#a:autodifferentiation.DifferentiableFunction[T]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "autodifferentiation\/Square.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "autodifferentiation\/Square.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "getInputs", "tail" : "(): Set[Input[T]]", "member" : "autodifferentiation.UnaryElementWiseDifferentiableFunction.getInputs", "link" : "autodifferentiation\/Square.html#getInputs:Set[autodifferentiation.Input[T]]", "kind" : "def"}, {"label" : "getParents", "tail" : "(): List[DifferentiableFunction[T]]", "member" : "autodifferentiation.UnaryElementWiseDifferentiableFunction.getParents", "link" : "autodifferentiation\/Square.html#getParents:List[autodifferentiation.DifferentiableFunction[T]]", "kind" : "def"}, {"label" : "getOutputShape", "tail" : "(): Array[Option[Int]]", "member" : "autodifferentiation.UnaryElementWiseDifferentiableFunction.getOutputShape", "link" : "autodifferentiation\/Square.html#getOutputShape:Array[Option[Int]]", "kind" : "def"}, {"label" : "backpropagateAll", "tail" : "(execution: DifferentiableFunctionExecution[T])(num: Numeric[T]): Map[DifferentiableFunction[T], NDArray[T]]", "member" : "autodifferentiation.DifferentiableFunction.backpropagateAll", "link" : "autodifferentiation\/Square.html#backpropagateAll(execution:autodifferentiation.DifferentiableFunctionExecution[T])(implicitnum:Numeric[T]):Map[autodifferentiation.DifferentiableFunction[T],ndarray.NDArray[T]]", "kind" : "def"}, {"label" : "compute", "tail" : "(inputs: Map[Input[T], NDArray[T]]): NDArray[T]", "member" : "autodifferentiation.DifferentiableFunction.compute", "link" : "autodifferentiation\/Square.html#compute(inputs:Map[autodifferentiation.Input[T],ndarray.NDArray[T]]):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "autodifferentiation\/Square.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "autodifferentiation\/Square.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "autodifferentiation\/Square.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "autodifferentiation\/Square.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "autodifferentiation\/Square.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "autodifferentiation\/Square.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "autodifferentiation\/Square.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "autodifferentiation\/Square.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "autodifferentiation\/Square.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "autodifferentiation\/Square.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "autodifferentiation\/Square.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "autodifferentiation\/Square.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "autodifferentiation\/Square.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "autodifferentiation\/Square.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "autodifferentiation\/Square.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "autodifferentiation\/Square.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "autodifferentiation\/Square.html", "kind" : "case class"}, {"name" : "autodifferentiation.Subtract", "shortDescription" : "Subtracts the results of two functions.", "members_case class" : [{"label" : "gradient", "tail" : "(withRespectToVariable: Variable[T]): DifferentiableFunction[T]", "member" : "autodifferentiation.Subtract.gradient", "link" : "autodifferentiation\/Subtract.html#gradient(withRespectToVariable:autodifferentiation.Variable[T]):autodifferentiation.DifferentiableFunction[T]", "kind" : "def"}, {"label" : "backpropagate", "tail" : "(execution: DifferentiableFunctionExecution[T], outputGradient: NDArray[T], withRespectToArg: Int): NDArray[T]", "member" : "autodifferentiation.Subtract.backpropagate", "link" : "autodifferentiation\/Subtract.html#backpropagate(execution:autodifferentiation.DifferentiableFunctionExecution[T],outputGradient:ndarray.NDArray[T],withRespectToArg:Int):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "computeAll", "tail" : "(inputs: Map[Input[T], NDArray[T]]): DifferentiableFunctionExecution[T]", "member" : "autodifferentiation.Subtract.computeAll", "link" : "autodifferentiation\/Subtract.html#computeAll(inputs:Map[autodifferentiation.Input[T],ndarray.NDArray[T]]):autodifferentiation.DifferentiableFunctionExecution[T]", "kind" : "def"}, {"member" : "autodifferentiation.Subtract#<init>", "error" : "unsupported entity"}, {"label" : "classTag", "tail" : ": ClassTag[T]", "member" : "autodifferentiation.Subtract.classTag", "link" : "autodifferentiation\/Subtract.html#classTag:scala.reflect.ClassTag[T]", "kind" : "implicit val"}, {"label" : "b", "tail" : ": DifferentiableFunction[T]", "member" : "autodifferentiation.Subtract.b", "link" : "autodifferentiation\/Subtract.html#b:autodifferentiation.DifferentiableFunction[T]", "kind" : "val"}, {"label" : "a", "tail" : ": DifferentiableFunction[T]", "member" : "autodifferentiation.Subtract.a", "link" : "autodifferentiation\/Subtract.html#a:autodifferentiation.DifferentiableFunction[T]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "autodifferentiation\/Subtract.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "autodifferentiation\/Subtract.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "getInputs", "tail" : "(): Set[Input[T]]", "member" : "autodifferentiation.BinaryDifferentiableFunctionWithBroadcast.getInputs", "link" : "autodifferentiation\/Subtract.html#getInputs:Set[autodifferentiation.Input[T]]", "kind" : "def"}, {"label" : "unbroadcast", "tail" : "(targetShape: Array[Int], outputGradient: NDArray[T])(num: Numeric[T]): NDArray[T]", "member" : "autodifferentiation.BinaryDifferentiableFunctionWithBroadcast.unbroadcast", "link" : "autodifferentiation\/Subtract.html#unbroadcast(targetShape:Array[Int],outputGradient:ndarray.NDArray[T])(implicitnum:Numeric[T]):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "getParents", "tail" : "(): List[DifferentiableFunction[T]]", "member" : "autodifferentiation.BinaryDifferentiableFunctionWithBroadcast.getParents", "link" : "autodifferentiation\/Subtract.html#getParents:List[autodifferentiation.DifferentiableFunction[T]]", "kind" : "def"}, {"label" : "getOutputShape", "tail" : "(): Array[Option[Int]]", "member" : "autodifferentiation.BinaryDifferentiableFunctionWithBroadcast.getOutputShape", "link" : "autodifferentiation\/Subtract.html#getOutputShape:Array[Option[Int]]", "kind" : "def"}, {"label" : "backpropagateAll", "tail" : "(execution: DifferentiableFunctionExecution[T])(num: Numeric[T]): Map[DifferentiableFunction[T], NDArray[T]]", "member" : "autodifferentiation.DifferentiableFunction.backpropagateAll", "link" : "autodifferentiation\/Subtract.html#backpropagateAll(execution:autodifferentiation.DifferentiableFunctionExecution[T])(implicitnum:Numeric[T]):Map[autodifferentiation.DifferentiableFunction[T],ndarray.NDArray[T]]", "kind" : "def"}, {"label" : "compute", "tail" : "(inputs: Map[Input[T], NDArray[T]]): NDArray[T]", "member" : "autodifferentiation.DifferentiableFunction.compute", "link" : "autodifferentiation\/Subtract.html#compute(inputs:Map[autodifferentiation.Input[T],ndarray.NDArray[T]]):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "autodifferentiation\/Subtract.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "autodifferentiation\/Subtract.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "autodifferentiation\/Subtract.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "autodifferentiation\/Subtract.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "autodifferentiation\/Subtract.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "autodifferentiation\/Subtract.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "autodifferentiation\/Subtract.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "autodifferentiation\/Subtract.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "autodifferentiation\/Subtract.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "autodifferentiation\/Subtract.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "autodifferentiation\/Subtract.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "autodifferentiation\/Subtract.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "autodifferentiation\/Subtract.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "autodifferentiation\/Subtract.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "autodifferentiation\/Subtract.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "autodifferentiation\/Subtract.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "autodifferentiation\/Subtract.html", "kind" : "case class"}, {"name" : "autodifferentiation.Sum", "shortDescription" : "Sums the results of a function.", "members_case class" : [{"label" : "getParents", "tail" : "(): List[DifferentiableFunction[T]]", "member" : "autodifferentiation.Sum.getParents", "link" : "autodifferentiation\/Sum.html#getParents:List[autodifferentiation.DifferentiableFunction[T]]", "kind" : "def"}, {"label" : "getOutputShape", "tail" : "(): Array[Option[Int]]", "member" : "autodifferentiation.Sum.getOutputShape", "link" : "autodifferentiation\/Sum.html#getOutputShape:Array[Option[Int]]", "kind" : "def"}, {"label" : "getInputs", "tail" : "(): Set[Input[T]]", "member" : "autodifferentiation.Sum.getInputs", "link" : "autodifferentiation\/Sum.html#getInputs:Set[autodifferentiation.Input[T]]", "kind" : "def"}, {"label" : "gradient", "tail" : "(withRespectToVariable: Variable[T]): DifferentiableFunction[T]", "member" : "autodifferentiation.Sum.gradient", "link" : "autodifferentiation\/Sum.html#gradient(withRespectToVariable:autodifferentiation.Variable[T]):autodifferentiation.DifferentiableFunction[T]", "kind" : "def"}, {"label" : "backpropagate", "tail" : "(execution: DifferentiableFunctionExecution[T], outputGradient: NDArray[T], withRespectToArg: Int): NDArray[T]", "member" : "autodifferentiation.Sum.backpropagate", "link" : "autodifferentiation\/Sum.html#backpropagate(execution:autodifferentiation.DifferentiableFunctionExecution[T],outputGradient:ndarray.NDArray[T],withRespectToArg:Int):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "computeAll", "tail" : "(inputs: Map[Input[T], NDArray[T]]): DifferentiableFunctionExecution[T]", "member" : "autodifferentiation.Sum.computeAll", "link" : "autodifferentiation\/Sum.html#computeAll(inputs:Map[autodifferentiation.Input[T],ndarray.NDArray[T]]):autodifferentiation.DifferentiableFunctionExecution[T]", "kind" : "def"}, {"member" : "autodifferentiation.Sum#<init>", "error" : "unsupported entity"}, {"label" : "classTag", "tail" : ": ClassTag[T]", "member" : "autodifferentiation.Sum.classTag", "link" : "autodifferentiation\/Sum.html#classTag:scala.reflect.ClassTag[T]", "kind" : "implicit val"}, {"label" : "a", "tail" : ": DifferentiableFunction[T]", "member" : "autodifferentiation.Sum.a", "link" : "autodifferentiation\/Sum.html#a:autodifferentiation.DifferentiableFunction[T]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "autodifferentiation\/Sum.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "autodifferentiation\/Sum.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "backpropagateAll", "tail" : "(execution: DifferentiableFunctionExecution[T])(num: Numeric[T]): Map[DifferentiableFunction[T], NDArray[T]]", "member" : "autodifferentiation.DifferentiableFunction.backpropagateAll", "link" : "autodifferentiation\/Sum.html#backpropagateAll(execution:autodifferentiation.DifferentiableFunctionExecution[T])(implicitnum:Numeric[T]):Map[autodifferentiation.DifferentiableFunction[T],ndarray.NDArray[T]]", "kind" : "def"}, {"label" : "compute", "tail" : "(inputs: Map[Input[T], NDArray[T]]): NDArray[T]", "member" : "autodifferentiation.DifferentiableFunction.compute", "link" : "autodifferentiation\/Sum.html#compute(inputs:Map[autodifferentiation.Input[T],ndarray.NDArray[T]]):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "autodifferentiation\/Sum.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "autodifferentiation\/Sum.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "autodifferentiation\/Sum.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "autodifferentiation\/Sum.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "autodifferentiation\/Sum.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "autodifferentiation\/Sum.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "autodifferentiation\/Sum.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "autodifferentiation\/Sum.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "autodifferentiation\/Sum.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "autodifferentiation\/Sum.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "autodifferentiation\/Sum.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "autodifferentiation\/Sum.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "autodifferentiation\/Sum.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "autodifferentiation\/Sum.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "autodifferentiation\/Sum.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "autodifferentiation\/Sum.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "autodifferentiation\/Sum.html", "kind" : "case class"}, {"name" : "autodifferentiation.UnaryElementWiseDifferentiableFunction", "trait" : "autodifferentiation\/UnaryElementWiseDifferentiableFunction.html", "kind" : "trait", "members_trait" : [{"label" : "getInputs", "tail" : "(): Set[Input[T]]", "member" : "autodifferentiation.UnaryElementWiseDifferentiableFunction.getInputs", "link" : "autodifferentiation\/UnaryElementWiseDifferentiableFunction.html#getInputs:Set[autodifferentiation.Input[T]]", "kind" : "def"}, {"label" : "getParents", "tail" : "(): List[DifferentiableFunction[T]]", "member" : "autodifferentiation.UnaryElementWiseDifferentiableFunction.getParents", "link" : "autodifferentiation\/UnaryElementWiseDifferentiableFunction.html#getParents:List[autodifferentiation.DifferentiableFunction[T]]", "kind" : "def"}, {"label" : "getOutputShape", "tail" : "(): Array[Option[Int]]", "member" : "autodifferentiation.UnaryElementWiseDifferentiableFunction.getOutputShape", "link" : "autodifferentiation\/UnaryElementWiseDifferentiableFunction.html#getOutputShape:Array[Option[Int]]", "kind" : "def"}, {"label" : "backpropagateAll", "tail" : "(execution: DifferentiableFunctionExecution[T])(num: Numeric[T]): Map[DifferentiableFunction[T], NDArray[T]]", "member" : "autodifferentiation.DifferentiableFunction.backpropagateAll", "link" : "autodifferentiation\/UnaryElementWiseDifferentiableFunction.html#backpropagateAll(execution:autodifferentiation.DifferentiableFunctionExecution[T])(implicitnum:Numeric[T]):Map[autodifferentiation.DifferentiableFunction[T],ndarray.NDArray[T]]", "kind" : "def"}, {"label" : "compute", "tail" : "(inputs: Map[Input[T], NDArray[T]]): NDArray[T]", "member" : "autodifferentiation.DifferentiableFunction.compute", "link" : "autodifferentiation\/UnaryElementWiseDifferentiableFunction.html#compute(inputs:Map[autodifferentiation.Input[T],ndarray.NDArray[T]]):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "autodifferentiation\/UnaryElementWiseDifferentiableFunction.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "autodifferentiation\/UnaryElementWiseDifferentiableFunction.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "autodifferentiation\/UnaryElementWiseDifferentiableFunction.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "autodifferentiation\/UnaryElementWiseDifferentiableFunction.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "autodifferentiation\/UnaryElementWiseDifferentiableFunction.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "autodifferentiation\/UnaryElementWiseDifferentiableFunction.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "autodifferentiation\/UnaryElementWiseDifferentiableFunction.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "autodifferentiation\/UnaryElementWiseDifferentiableFunction.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "autodifferentiation\/UnaryElementWiseDifferentiableFunction.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "autodifferentiation\/UnaryElementWiseDifferentiableFunction.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "autodifferentiation\/UnaryElementWiseDifferentiableFunction.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "autodifferentiation\/UnaryElementWiseDifferentiableFunction.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "autodifferentiation\/UnaryElementWiseDifferentiableFunction.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "autodifferentiation\/UnaryElementWiseDifferentiableFunction.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "autodifferentiation\/UnaryElementWiseDifferentiableFunction.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "autodifferentiation\/UnaryElementWiseDifferentiableFunction.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "autodifferentiation\/UnaryElementWiseDifferentiableFunction.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "autodifferentiation\/UnaryElementWiseDifferentiableFunction.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "autodifferentiation\/UnaryElementWiseDifferentiableFunction.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "a", "tail" : ": DifferentiableFunction[T]", "member" : "autodifferentiation.UnaryElementWiseDifferentiableFunction.a", "link" : "autodifferentiation\/UnaryElementWiseDifferentiableFunction.html#a:autodifferentiation.DifferentiableFunction[T]", "kind" : "abstract val"}, {"label" : "gradient", "tail" : "(withRespectToVariable: Variable[T]): DifferentiableFunction[T]", "member" : "autodifferentiation.DifferentiableFunction.gradient", "link" : "autodifferentiation\/UnaryElementWiseDifferentiableFunction.html#gradient(withRespectToVariable:autodifferentiation.Variable[T]):autodifferentiation.DifferentiableFunction[T]", "kind" : "abstract def"}, {"label" : "backpropagate", "tail" : "(execution: DifferentiableFunctionExecution[T], outputGradient: NDArray[T], withRespectToArg: Int): NDArray[T]", "member" : "autodifferentiation.DifferentiableFunction.backpropagate", "link" : "autodifferentiation\/UnaryElementWiseDifferentiableFunction.html#backpropagate(execution:autodifferentiation.DifferentiableFunctionExecution[T],outputGradient:ndarray.NDArray[T],withRespectToArg:Int):ndarray.NDArray[T]", "kind" : "abstract def"}, {"label" : "computeAll", "tail" : "(inputs: Map[Input[T], NDArray[T]]): DifferentiableFunctionExecution[T]", "member" : "autodifferentiation.DifferentiableFunction.computeAll", "link" : "autodifferentiation\/UnaryElementWiseDifferentiableFunction.html#computeAll(inputs:Map[autodifferentiation.Input[T],ndarray.NDArray[T]]):autodifferentiation.DifferentiableFunctionExecution[T]", "kind" : "abstract def"}, {"label" : "classTag", "tail" : ": ClassTag[T]", "member" : "autodifferentiation.DifferentiableFunction.classTag", "link" : "autodifferentiation\/UnaryElementWiseDifferentiableFunction.html#classTag:scala.reflect.ClassTag[T]", "kind" : "implicit abstract val"}], "shortDescription" : "A differentiable function with one arguments that operates on all elements."}, {"name" : "autodifferentiation.Variable", "trait" : "autodifferentiation\/Variable.html", "kind" : "trait", "members_trait" : [{"label" : "gradient", "tail" : "(withRespectToVariable: Variable[T]): DifferentiableFunction[T]", "member" : "autodifferentiation.Variable.gradient", "link" : "autodifferentiation\/Variable.html#gradient(withRespectToVariable:autodifferentiation.Variable[T]):autodifferentiation.DifferentiableFunction[T]", "kind" : "def"}, {"label" : "backpropagate", "tail" : "(execution: DifferentiableFunctionExecution[T], outputGradient: NDArray[T], withRespectToArg: Int): NDArray[T]", "member" : "autodifferentiation.Variable.backpropagate", "link" : "autodifferentiation\/Variable.html#backpropagate(execution:autodifferentiation.DifferentiableFunctionExecution[T],outputGradient:ndarray.NDArray[T],withRespectToArg:Int):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "backpropagateAll", "tail" : "(execution: DifferentiableFunctionExecution[T])(num: Numeric[T]): Map[DifferentiableFunction[T], NDArray[T]]", "member" : "autodifferentiation.DifferentiableFunction.backpropagateAll", "link" : "autodifferentiation\/Variable.html#backpropagateAll(execution:autodifferentiation.DifferentiableFunctionExecution[T])(implicitnum:Numeric[T]):Map[autodifferentiation.DifferentiableFunction[T],ndarray.NDArray[T]]", "kind" : "def"}, {"label" : "compute", "tail" : "(inputs: Map[Input[T], NDArray[T]]): NDArray[T]", "member" : "autodifferentiation.DifferentiableFunction.compute", "link" : "autodifferentiation\/Variable.html#compute(inputs:Map[autodifferentiation.Input[T],ndarray.NDArray[T]]):ndarray.NDArray[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "autodifferentiation\/Variable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "autodifferentiation\/Variable.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "autodifferentiation\/Variable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "autodifferentiation\/Variable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "autodifferentiation\/Variable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "autodifferentiation\/Variable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "autodifferentiation\/Variable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "autodifferentiation\/Variable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "autodifferentiation\/Variable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "autodifferentiation\/Variable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "autodifferentiation\/Variable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "autodifferentiation\/Variable.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "autodifferentiation\/Variable.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "autodifferentiation\/Variable.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "autodifferentiation\/Variable.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "autodifferentiation\/Variable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "autodifferentiation\/Variable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "autodifferentiation\/Variable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "autodifferentiation\/Variable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "classTag", "tail" : ": ClassTag[T]", "member" : "autodifferentiation.Variable.classTag", "link" : "autodifferentiation\/Variable.html#classTag:scala.reflect.ClassTag[T]", "kind" : "implicit abstract val"}, {"label" : "name", "tail" : ": String", "member" : "autodifferentiation.Variable.name", "link" : "autodifferentiation\/Variable.html#name:String", "kind" : "abstract val"}, {"label" : "getParents", "tail" : "(): List[DifferentiableFunction[T]]", "member" : "autodifferentiation.DifferentiableFunction.getParents", "link" : "autodifferentiation\/Variable.html#getParents:List[autodifferentiation.DifferentiableFunction[T]]", "kind" : "abstract def"}, {"label" : "getOutputShape", "tail" : "(): Array[Option[Int]]", "member" : "autodifferentiation.DifferentiableFunction.getOutputShape", "link" : "autodifferentiation\/Variable.html#getOutputShape:Array[Option[Int]]", "kind" : "abstract def"}, {"label" : "getInputs", "tail" : "(): Set[Input[T]]", "member" : "autodifferentiation.DifferentiableFunction.getInputs", "link" : "autodifferentiation\/Variable.html#getInputs:Set[autodifferentiation.Input[T]]", "kind" : "abstract def"}, {"label" : "computeAll", "tail" : "(inputs: Map[Input[T], NDArray[T]]): DifferentiableFunctionExecution[T]", "member" : "autodifferentiation.DifferentiableFunction.computeAll", "link" : "autodifferentiation\/Variable.html#computeAll(inputs:Map[autodifferentiation.Input[T],ndarray.NDArray[T]]):autodifferentiation.DifferentiableFunctionExecution[T]", "kind" : "abstract def"}], "shortDescription" : "A variable (has potentially non-zero gradient)."}], "losses" : [{"name" : "losses.Loss", "trait" : "losses\/Loss.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "losses\/Loss.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "losses\/Loss.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "losses\/Loss.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "losses\/Loss.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "losses\/Loss.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "losses\/Loss.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "losses\/Loss.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "losses\/Loss.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "losses\/Loss.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "losses\/Loss.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "losses\/Loss.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "losses\/Loss.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "losses\/Loss.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "losses\/Loss.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "losses\/Loss.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "losses\/Loss.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "losses\/Loss.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "losses\/Loss.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "losses\/Loss.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "computeLoss", "tail" : "(yTrue: NDArray[T], yPred: NDArray[T]): NDArray[T]", "member" : "losses.Loss.computeLoss", "link" : "losses\/Loss.html#computeLoss(yTrue:ndarray.NDArray[T],yPred:ndarray.NDArray[T]):ndarray.NDArray[T]", "kind" : "abstract def"}], "shortDescription" : "A loss function."}, {"name" : "losses.MeanSquaredError", "shortDescription" : "The mean squared error loss function.", "members_case class" : [{"label" : "computeLoss", "tail" : "(yTrue: NDArray[T], yPred: NDArray[T]): NDArray[T]", "member" : "losses.MeanSquaredError.computeLoss", "link" : "losses\/MeanSquaredError.html#computeLoss(yTrue:ndarray.NDArray[T],yPred:ndarray.NDArray[T]):ndarray.NDArray[T]", "kind" : "def"}, {"member" : "losses.MeanSquaredError#<init>", "error" : "unsupported entity"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "losses\/MeanSquaredError.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "losses\/MeanSquaredError.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "losses\/MeanSquaredError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "losses\/MeanSquaredError.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "losses\/MeanSquaredError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "losses\/MeanSquaredError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "losses\/MeanSquaredError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "losses\/MeanSquaredError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "losses\/MeanSquaredError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "losses\/MeanSquaredError.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "losses\/MeanSquaredError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "losses\/MeanSquaredError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "losses\/MeanSquaredError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "losses\/MeanSquaredError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "losses\/MeanSquaredError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "losses\/MeanSquaredError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "losses\/MeanSquaredError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "losses\/MeanSquaredError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "losses\/MeanSquaredError.html", "kind" : "case class"}]};